unit uUpdateDB;

interface

uses
  SysUtils, Funcoes, Forms, DBClient, SQLEXpr, DB, Dialogs, Classes;

const
  Version = 127;

  procedure AtualizaDB;
  procedure AtualizaDataBase;

  {Tabelas do Sistema}
  procedure DomainsSystem;
  procedure Clientes;
  procedure ConfOS;
  procedure ConfSystema;
  procedure ContaBancaria;
  procedure ContaBancariaMov;
  procedure ContaPagar;
  procedure ContaPagarAcerto;
  procedure ContaReceber;
  procedure ContaReceberAcerto;
  procedure Empresas;
  procedure EntradaAvulsa;
  procedure EntradaAvulsaItem;
  procedure Estoque;
  procedure EstoqueMov;
  procedure Fornecedores;
  procedure Genericas;
  procedure LivroCaixa;
  procedure Login;
  procedure Menus;
  procedure NotaFiscal;
  procedure NotaFiscalAcerto;
  procedure NotaFiscalItem;
  procedure OrdemServico;
  procedure OrdemServicoAcerto;
  procedure OrdemServicoItem;
  procedure OrdemServicoTransf;
  procedure OrdemServicoTransfItem;
  procedure PlanoContas;
  procedure PlanoContasPlanejamento;
  procedure Produtos;
  procedure ProdutosBar;
  procedure ProdutosComp;
  procedure SaidaAvaria;
  procedure SaidaAvariaItem;
  procedure SaidaAvulsa;
  procedure SaidaAvulsaItem;
  procedure TabelaPreco;
  procedure TabelaPrecoItem;
  procedure TGener;
  procedure TransfEstoque;
  procedure TransfEstoqueItem;
  procedure Usuarios;
  procedure UsuarioEmpr;
  procedure UsuarioM;
  procedure ForeignKey;
  procedure GrantSelect;
  procedure Index;
  {end - Tabelas do Sistema}

  procedure DeleteDifer(strMENU_ID : String);
  procedure InsertUpdateDB(strMENU_ID,
                           strMENU_GENE_EMPR_ID_TP,
                           strMENU_GENE_TGEN_ID_TP,
                           strMENU_GENE_ID_TP,
                           strMENU_CODIGO,
                           strMENU_DESCRICAO,
                           strMENU_ATIVO,
                           strMENU_NOME_BPL,
                           strMENU_CLASSE_FORM_BPL,
                           strMENU_PARAMETRO_ABERTURA,
                           strMENU_MENU_ID : String);

implementation

uses ufPrincipal, ufSplash;

var
  funcLocal : TFuncoes;

procedure DeleteDifer(strMENU_ID : String);
var
  qryCons : TSQLQuery;
begin
  try
    qryCons := TSQLQuery.Create(nil);
    qryCons.SQLConnection := funcLocal.Conexao;
    try
      with qryCons do begin
        Close;
        sql.Clear;
        try
          funcLocal.StartCommit;
        except
        end;
        sql.Add('UPDATE MENU');
        sql.Add('SET    MENU_ATIVO = 0');
        sql.Add('WHERE  MENU_ID    > ' + strMENU_ID);
        ExecSQL;
        try
          funcLocal.Commit;
        except
        end;
      end;
    except
    end;
  finally
    qryCons.Close;
    FreeAndNil(qryCons);
  end;
end;

procedure InsertUpdateDB(strMENU_ID,
                         strMENU_GENE_EMPR_ID_TP,
                         strMENU_GENE_TGEN_ID_TP,
                         strMENU_GENE_ID_TP,
                         strMENU_CODIGO,
                         strMENU_DESCRICAO,
                         strMENU_ATIVO,
                         strMENU_NOME_BPL,
                         strMENU_CLASSE_FORM_BPL,
                         strMENU_PARAMETRO_ABERTURA,
                         strMENU_MENU_ID : String);
var
  qryCons : TSQLQuery;
begin
  try
    qryCons := TSQLQuery.Create(nil);
    qryCons.SQLConnection := funcLocal.Conexao;
    try
      with qryCons do begin
        Close;
        sql.Clear;
        try
          funcLocal.StartCommit;
        except
        end;
        try
          sql.Add('INSERT INTO MENU (MENU_ID,');
          sql.Add('                  MENU_GENE_EMPR_ID_TP,');
          sql.Add('                  MENU_GENE_TGEN_ID_TP,');
          sql.Add('                  MENU_GENE_ID_TP,');
          sql.Add('                  MENU_CODIGO,');
          sql.Add('                  MENU_DESCRICAO,');
          sql.Add('                  MENU_ATIVO,');
          sql.Add('                  MENU_NOME_BPL,');
          sql.Add('                  MENU_CLASSE_FORM_BPL,');
          sql.Add('                  MENU_PARAMETRO_ABERTURA,');
          sql.Add('                  MENU_MENU_ID)');
          sql.Add('VALUES (' + strMENU_ID                             + ','
                             + strMENU_GENE_EMPR_ID_TP                + ','
                             + strMENU_GENE_TGEN_ID_TP                + ','
                             + strMENU_GENE_ID_TP                     + ','
                             + QuotedStr(strMENU_CODIGO)              + ','
                             + QuotedStr(strMENU_DESCRICAO)           + ','
                             + strMENU_ATIVO                          + ','
                             + QuotedStr(strMENU_NOME_BPL)            + ','
                             + QuotedStr(strMENU_CLASSE_FORM_BPL)     + ','
                             + QuotedStr(strMENU_PARAMETRO_ABERTURA)  + ','
                             + strMENU_MENU_ID                        + ')');
          ExecSQL;
          try
            funcLocal.Commit;
          except
          end;
        except
          sql.Clear;
          try
            funcLocal.StartCommit;
          except
          end;
          sql.Add('UPDATE MENU');
          sql.Add('SET    MENU_GENE_EMPR_ID_TP    = ' + strMENU_GENE_EMPR_ID_TP);
          sql.Add('      ,MENU_GENE_TGEN_ID_TP    = ' + strMENU_GENE_TGEN_ID_TP);
          sql.Add('      ,MENU_GENE_ID_TP         = ' + strMENU_GENE_ID_TP);
          sql.Add('      ,MENU_CODIGO             = ' + QuotedStr(strMENU_CODIGO));
          sql.Add('      ,MENU_DESCRICAO          = ' + QuotedStr(strMENU_DESCRICAO));
          sql.Add('      ,MENU_ATIVO              = ' + strMENU_ATIVO);
          sql.Add('      ,MENU_NOME_BPL           = ' + QuotedStr(strMENU_NOME_BPL));
          sql.Add('      ,MENU_CLASSE_FORM_BPL    = ' + QuotedStr(strMENU_CLASSE_FORM_BPL));
          sql.Add('      ,MENU_PARAMETRO_ABERTURA = ' + QuotedStr(strMENU_PARAMETRO_ABERTURA));
          sql.Add('      ,MENU_MENU_ID            = ' + strMENU_MENU_ID);
          sql.Add('WHERE MENU_ID                  = ' + strMENU_ID);
          ExecSQL;
          try
            funcLocal.Commit;
          except
          end;
        end;
      end;
    except
    end;
  finally
    qryCons.Close;
    FreeAndNil(qryCons);
  end;
end;

procedure AtualizaDB;
begin
  try
    funcLocal := fPrincipal.funcPrincipal;
    DeleteDifer('1');
    if fPrincipal.TipoSystem = sysFinanc then begin
      InsertUpdateDB('1','0','1','1','1','ADMINISTRATIVO','1','CMD','Null','1','Null');
      InsertUpdateDB('2','0','1','1','1.1','EMPRESA','1','CMD','Null','2','1');
      InsertUpdateDB('3','0','1','1','1.2','USUARIOS','1','CMD','Null','3','1');
      InsertUpdateDB('4','0','1','1','1.3','CONFIGURAÇÕES','1','CMD','Null','4','1');
      InsertUpdateDB('5','0','1','1','131','Configurações do Sistema','1','configuracao.bpl','TfConfiguracao','5','4');
      InsertUpdateDB('6','0','1','1','111','Cad. de Empresas','1','empresas.bpl','TfEmpresas','6','2');
      InsertUpdateDB('7','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','7','6');
      InsertUpdateDB('8','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','8','6');
      InsertUpdateDB('9','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','9','6');
      InsertUpdateDB('10','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','10','6');
      InsertUpdateDB('11','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','11','6');
      InsertUpdateDB('12','0','1','1','121','Cad. Usuarios','1','usuarios.bpl','TfUsuario','12','3');
      InsertUpdateDB('13','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','13','12');
      InsertUpdateDB('14','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','14','12');
      InsertUpdateDB('15','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','15','12');
      InsertUpdateDB('16','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','16','12');
      InsertUpdateDB('17','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','17','12');
      InsertUpdateDB('18','0','1','1','132','Menus do Sistema','1','menus.bpl','TfMenus','18','4');
      InsertUpdateDB('19','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','19','18');
      InsertUpdateDB('20','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','20','18');
      InsertUpdateDB('21','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','21','18');
      InsertUpdateDB('22','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','22','18');
      InsertUpdateDB('23','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','23','18');
      InsertUpdateDB('140','0','1','1','2','CADASTROS','1','CMD','Null','140;','Null');
      InsertUpdateDB('142','0','1','1','2.1','CLIENTES','1','CMD','Null','142;','140');
      InsertUpdateDB('143','0','1','1','2.2','FORNECEDORES','1','CMD','Null','143;','140');
      InsertUpdateDB('144','0','1','1','221','Cad. de Fornecedores','1','fornecedores.bpl','TfFornecedores','144;','143');
      InsertUpdateDB('146','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','146','144');
      InsertUpdateDB('147','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','147','144');
      InsertUpdateDB('148','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','148','144');
      InsertUpdateDB('149','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','149','144');
      InsertUpdateDB('150','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','150','144');
      InsertUpdateDB('152','0','1','1','211','Cad. de Clientes','1','clientes.bpl','TfClientes','152;','142');
      InsertUpdateDB('153','0','1','1','212','Cad. de Praças','1','pracas.bpl','TfPracas','153;','142');
      InsertUpdateDB('155','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','155','152');
      InsertUpdateDB('156','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','156','152');
      InsertUpdateDB('157','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','157','152');
      InsertUpdateDB('158','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','158','152');
      InsertUpdateDB('159','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','159','152');
      InsertUpdateDB('160','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','160','153');
      InsertUpdateDB('161','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','161','153');
      InsertUpdateDB('162','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','162','153');
      InsertUpdateDB('163','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','163','153');
      InsertUpdateDB('164','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','164','153');
      InsertUpdateDB('165','0','1','1','3','FINANCEIRO','1','CMD','Null','165;','Null');
      InsertUpdateDB('166','0','1','1','3.5','PLANO CONTAS','1','CMD','Null','166;','165');
      InsertUpdateDB('167','0','1','1','351','Cad. Plano de Contas','1','plano_contas.bpl','TfPlano_Contas','167;','166');
      InsertUpdateDB('169','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','169','167');
      InsertUpdateDB('170','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','170','167');
      InsertUpdateDB('171','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','171','167');
      InsertUpdateDB('172','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','172','167');
      InsertUpdateDB('173','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','173','167');
      InsertUpdateDB('174','0','1','1','3.1','CONTAS PAGAR','1','CMD','Null','174;','165');
      InsertUpdateDB('175','0','1','1','311','Cad. Contas a Pagar','1','contas_pagar.bpl','TfContas_Pagar','175;','174');
      InsertUpdateDB('177','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','177','175');
      InsertUpdateDB('178','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','178','175');
      InsertUpdateDB('179','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','179','175');
      InsertUpdateDB('180','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','180','175');
      InsertUpdateDB('181','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','181','175');
      InsertUpdateDB('182','0','1','1','312','Baixa C. Pagar Parcial','1','baixa_contas_pagar_parcial.bpl','TfBaixa_Contas_Pagar_Parcial','182;','174');
      InsertUpdateDB('184','0','1','1','313','Baixa C. Pagar Automático','1','baixa_contas_pagar_auto.bpl','TfBaixa_Contas_Pagar_Auto','184;','174');
      InsertUpdateDB('186','0','1','1','3.2','CONTAS RECEBER','1','CMD','Null','186;','165');
      InsertUpdateDB('187','0','1','1','321','Cad. Contas Receber','1','contas_receber.bpl','TfContas_Receber','187;','186');
      InsertUpdateDB('188','0','1','1','322','Baixa C. Receber Parcial','1','baixa_contas_receber_parcial.bpl','TfBaixa_Contas_Receber_Parcial','188;','186');
      InsertUpdateDB('189','0','1','1','323','Baixa C. Receber Automático','1','baixa_contas_receber_auto.bpl','TfBaixa_Contas_Receber_Auto','189;','186');
      InsertUpdateDB('191','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','191','187');
      InsertUpdateDB('192','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','192','187');
      InsertUpdateDB('193','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','193','187');
      InsertUpdateDB('194','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','194','187');
      InsertUpdateDB('195','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','195','187');
      InsertUpdateDB('196','0','1','1','3.3','CONTAS BANCARIAS','1','CMD','Null','196;','165');
      InsertUpdateDB('197','0','1','1','4','RELATORIOS/GRAFICOS','1','CMD','Null','197;','Null');
      InsertUpdateDB('202','0','1','1','4.1','CADASTROS','1','CMD','Null','202;','197');
      InsertUpdateDB('204','0','1','1','231','Cad. de Bancos/Financeiras','1','bancos.bpl','TfBancos','204;','317');
      InsertUpdateDB('205','0','1','1','331','Cad. Contas Bancárias','1','contas_bancarias.bpl','TfContas_Bancarias','205;','196');
      InsertUpdateDB('206','0','1','1','232','Cad. Tipos de Movimentação','1','tipos_movimentacoes_bancarias.bpl','TfTipos_Movimentacoes_Bancarias','206;','317');
      InsertUpdateDB('207','0','1','1','332','Movimentação Bancária','1','movimentacao_bancaria.bpl','TfMovimentacao_Bancaria','207;','196');
      InsertUpdateDB('209','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','209','204');
      InsertUpdateDB('210','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','210','204');
      InsertUpdateDB('211','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','211','204');
      InsertUpdateDB('212','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','212','204');
      InsertUpdateDB('213','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','213','204');
      InsertUpdateDB('214','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','214','205');
      InsertUpdateDB('215','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','215','205');
      InsertUpdateDB('216','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','216','205');
      InsertUpdateDB('217','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','217','205');
      InsertUpdateDB('218','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','218','205');
      InsertUpdateDB('219','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','219','206');
      InsertUpdateDB('220','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','220','206');
      InsertUpdateDB('221','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','221','206');
      InsertUpdateDB('222','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','222','206');
      InsertUpdateDB('223','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','223','206');
      InsertUpdateDB('224','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','224','207');
      InsertUpdateDB('225','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','225','207');
      InsertUpdateDB('226','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','226','207');
      InsertUpdateDB('227','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','227','207');
      InsertUpdateDB('228','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','228','207');
      InsertUpdateDB('234','0','1','1','411','Rel. de Clientes','1','rel_clientes.bpl','TfRel_Clientes','234;','202');
      InsertUpdateDB('235','0','1','1','412','Rel. de Fornecedores','1','rel_fornecedores.bpl','TfRel_Fornecedores','235;','202');
      InsertUpdateDB('236','0','1','1','4.2','FINANCEIRO','1','CMD','Null','236;','197');
      InsertUpdateDB('238','0','1','1','413','Rel. Contas Pagar','1','rel_contas_pagar.bpl','TfRel_Contas_Pagar','238;','202');
      InsertUpdateDB('239','0','1','1','414','Rel. Contas Receber','1','rel_contas_receber.bpl','TfRel_Contas_Receber','239;','202');
      InsertUpdateDB('241','0','1','1','352','Planejamento Anual','1','plano_contas_planejamento.bpl','TfPlano_Contas_Planejamento','241;','166');
      InsertUpdateDB('243','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','243','241');
      InsertUpdateDB('244','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','244','241');
      InsertUpdateDB('245','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','245','241');
      InsertUpdateDB('246','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','246','241');
      InsertUpdateDB('247','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','247','241');
      InsertUpdateDB('254','0','1','1','421','Rel. Contas Receber X Pagar','1','rel_contas_receber_x_pagar.bpl','TfRel_Contas_Receber_X_Pagar','254;','236');
      InsertUpdateDB('256','0','1','1','423','Rel. Livro Caixa','1','rel_livro_caixa.bpl','TfRel_Livro_Caixa','256;','236');
      InsertUpdateDB('258','0','1','1','314','Lanç. Inst. Contas Pagar','1','lanc_auto_contas_pagar.bpl','TfLanc_Auto_Contas_Pagar','258;','174');
      InsertUpdateDB('259','0','1','1','324','Lanç. Inst. Contas Receber','1','lanc_auto_contas_receber.bpl','TfLanc_Auto_Contas_Receber','259;','186');
      InsertUpdateDB('262','0','1','1','424','Rel. Planejamento Anual','1','rel_plano_contas_planejamento.bpl','TfRel_Plano_Contas_Planejamento','262;','236');
      InsertUpdateDB('273','0','1','1','425','Rel. Plano de Contas','1','rel_plano_contas.bpl','TfRel_Plano_Contas','273;','236');
      InsertUpdateDB('275','0','1','1','422','Rel. Curva ABC','1','rel_abc_financas.bpl','TfRel_ABC_Financas','275;','236');
      InsertUpdateDB('284','0','1','1','426','Rel. Mov. Bancárias','1','rel_contas_bancarias.bpl','TfRel_Contas_Bancarias','284;','236');
      InsertUpdateDB('286','0','1','1','4.3','GRAFICOS','1','CMD','CMD','286;','197');
      InsertUpdateDB('288','0','1','1','431','Resumo Financeiro Anual','1','graf_resumo_financeiro_anual.bpl','TfGraf_Resumo_Financeiro_Anual','288;','286');
      InsertUpdateDB('317','0','1','1','2.3','FINANCEIROS','1','CMD','Null','317;','140');
      InsertUpdateDB('319','0','1','1','0','Visualiza Paineis Financeiros','1','Null','Null','319;','12');
      InsertUpdateDB('332','0','1','1','432','Gráf. Planejamento Anual','1','graf_planejamento_anual.bpl','TfGraf_Planejamento_Anual','332;','286');
      InsertUpdateDB('333','0','1','1','433','Gráf. C. Receber X C. Pagar','1','graf_contas_receber_pagar.bpl','TfGraf_Contas_Receber_Pagar','333;','286');
      InsertUpdateDB('334','0','1','1','434','Gráf. Evolutivo de Lucro Mensal','1','graf_evolutivo_anual.bpl','TfGraf_Evolutivo_Anual','334;','286');
      InsertUpdateDB('335','0','1','1','435','Gráf. Evolutivo por Documento','1','graf_forma_pagamento.bpl','TfGraf_Forma_Pagamento','335;','286');
      InsertUpdateDB('345','0','1','1','0','Visualiza Contas Pagar/Receber do Mês','1','Null','Null','345;','6');
      InsertUpdateDB('346','0','1','1','0','Visualiza Gráfico Evolutivo Anual','1','Null','Null','346;','6');
      InsertUpdateDB('347','0','1','1','0','Visualiza Resumo Financeiro','1','Null','Null','347;','6');
      InsertUpdateDB('419','0','1','1','427','Rel. Contábil','1','rel_contabil.bpl','TfRel_Contabil','419;','236');
    end else if fPrincipal.TipoSystem = sysEstoque then begin
      InsertUpdateDB('1','0','1','1','1','ADMINISTRATIVO','1','CMD','Null','1','Null');
      InsertUpdateDB('2','0','1','1','1.1','EMPRESA','1','CMD','Null','2','1');
      InsertUpdateDB('3','0','1','1','1.2','USUARIOS','1','CMD','Null','3','1');
      InsertUpdateDB('4','0','1','1','1.3','CONFIGURAÇÕES','1','CMD','Null','4','1');
      InsertUpdateDB('5','0','1','1','131','Configurações do Sistema','1','configuracao.bpl','TfConfiguracao','5','4');
      InsertUpdateDB('6','0','1','1','111','Cad. de Empresas','1','empresas.bpl','TfEmpresas','6','2');
      InsertUpdateDB('7','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','7','6');
      InsertUpdateDB('8','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','8','6');
      InsertUpdateDB('9','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','9','6');
      InsertUpdateDB('10','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','10','6');
      InsertUpdateDB('11','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','11','6');
      InsertUpdateDB('12','0','1','1','121','Cad. Usuarios','1','usuarios.bpl','TfUsuario','12','3');
      InsertUpdateDB('13','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','13','12');
      InsertUpdateDB('14','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','14','12');
      InsertUpdateDB('15','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','15','12');
      InsertUpdateDB('16','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','16','12');
      InsertUpdateDB('17','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','17','12');
      InsertUpdateDB('18','0','1','1','132','Menus do Sistema','1','menus.bpl','TfMenus','18','4');
      InsertUpdateDB('19','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','19','18');
      InsertUpdateDB('20','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','20','18');
      InsertUpdateDB('21','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','21','18');
      InsertUpdateDB('22','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','22','18');
      InsertUpdateDB('23','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','23','18');
      InsertUpdateDB('140','0','1','1','2','CADASTROS','1','CMD','Null','140;','Null');
      InsertUpdateDB('142','0','1','1','2.1','CLIENTES','1','CMD','Null','142;','140');
      InsertUpdateDB('143','0','1','1','2.2','FORNECEDORES','1','CMD','Null','143;','140');
      InsertUpdateDB('144','0','1','1','221','Cad. de Fornecedores','1','fornecedores.bpl','TfFornecedores','144;','143');
      InsertUpdateDB('146','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','146','144');
      InsertUpdateDB('147','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','147','144');
      InsertUpdateDB('148','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','148','144');
      InsertUpdateDB('149','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','149','144');
      InsertUpdateDB('150','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','150','144');
      InsertUpdateDB('152','0','1','1','211','Cad. de Clientes','1','clientes.bpl','TfClientes','152;','142');
      InsertUpdateDB('153','0','1','1','212','Cad. de Praças','1','pracas.bpl','TfPracas','153;','142');
      InsertUpdateDB('155','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','155','152');
      InsertUpdateDB('156','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','156','152');
      InsertUpdateDB('157','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','157','152');
      InsertUpdateDB('158','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','158','152');
      InsertUpdateDB('159','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','159','152');
      InsertUpdateDB('160','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','160','153');
      InsertUpdateDB('161','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','161','153');
      InsertUpdateDB('162','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','162','153');
      InsertUpdateDB('163','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','163','153');
      InsertUpdateDB('164','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','164','153');
      InsertUpdateDB('165','0','1','1','4','FINANCEIRO','1','CMD','Null','165;','Null');
      InsertUpdateDB('166','0','1','1','4.4','PLANO CONTAS','1','CMD','Null','166;','165');
      InsertUpdateDB('167','0','1','1','441','Cad. Plano de Contas','1','plano_contas.bpl','TfPlano_Contas','167;','166');
      InsertUpdateDB('169','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','169','167');
      InsertUpdateDB('170','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','170','167');
      InsertUpdateDB('171','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','171','167');
      InsertUpdateDB('172','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','172','167');
      InsertUpdateDB('173','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','173','167');
      InsertUpdateDB('174','0','1','1','4.1','CONTAS PAGAR','1','CMD','Null','174;','165');
      InsertUpdateDB('175','0','1','1','411','Cad. Contas a Pagar','1','contas_pagar.bpl','TfContas_Pagar','175;','174');
      InsertUpdateDB('177','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','177','175');
      InsertUpdateDB('178','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','178','175');
      InsertUpdateDB('179','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','179','175');
      InsertUpdateDB('180','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','180','175');
      InsertUpdateDB('181','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','181','175');
      InsertUpdateDB('182','0','1','1','412','Baixa C. Pagar Parcial','1','baixa_contas_pagar_parcial.bpl','TfBaixa_Contas_Pagar_Parcial','182;','174');
      InsertUpdateDB('184','0','1','1','413','Baixa C. Pagar Automático','1','baixa_contas_pagar_auto.bpl','TfBaixa_Contas_Pagar_Auto','184;','174');
      InsertUpdateDB('186','0','1','1','4.2','CONTAS RECEBER','1','CMD','Null','186;','165');
      InsertUpdateDB('187','0','1','1','421','Cad. Contas Receber','1','contas_receber.bpl','TfContas_Receber','187;','186');
      InsertUpdateDB('188','0','1','1','422','Baixa C. Receber Parcial','1','baixa_contas_receber_parcial.bpl','TfBaixa_Contas_Receber_Parcial','188;','186');
      InsertUpdateDB('189','0','1','1','423','Baixa C. Receber Automático','1','baixa_contas_receber_auto.bpl','TfBaixa_Contas_Receber_Auto','189;','186');
      InsertUpdateDB('191','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','191','187');
      InsertUpdateDB('192','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','192','187');
      InsertUpdateDB('193','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','193','187');
      InsertUpdateDB('194','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','194','187');
      InsertUpdateDB('195','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','195','187');
      InsertUpdateDB('196','0','1','1','4.3','CONTAS BANCARIAS','1','CMD','Null','196;','165');
      InsertUpdateDB('197','0','1','1','5','RELATORIOS/GRAFICOS','1','CMD','Null','197;','Null');
      InsertUpdateDB('202','0','1','1','5.1','CADASTROS','1','CMD','Null','202;','197');
      InsertUpdateDB('204','0','1','1','231','Cad. de Bancos/Financeiras','1','bancos.bpl','TfBancos','204;','317');
      InsertUpdateDB('205','0','1','1','431','Cad. Contas Bancárias','1','contas_bancarias.bpl','TfContas_Bancarias','205;','196');
      InsertUpdateDB('206','0','1','1','232','Cad. Tipos de Movimentação','1','tipos_movimentacoes_bancarias.bpl','TfTipos_Movimentacoes_Bancarias','206;','317');
      InsertUpdateDB('207','0','1','1','432','Movimentação Bancária','1','movimentacao_bancaria.bpl','TfMovimentacao_Bancaria','207;','196');
      InsertUpdateDB('209','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','209','204');
      InsertUpdateDB('210','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','210','204');
      InsertUpdateDB('211','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','211','204');
      InsertUpdateDB('212','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','212','204');
      InsertUpdateDB('213','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','213','204');
      InsertUpdateDB('214','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','214','205');
      InsertUpdateDB('215','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','215','205');
      InsertUpdateDB('216','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','216','205');
      InsertUpdateDB('217','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','217','205');
      InsertUpdateDB('218','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','218','205');
      InsertUpdateDB('219','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','219','206');
      InsertUpdateDB('220','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','220','206');
      InsertUpdateDB('221','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','221','206');
      InsertUpdateDB('222','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','222','206');
      InsertUpdateDB('223','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','223','206');
      InsertUpdateDB('224','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','224','207');
      InsertUpdateDB('225','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','225','207');
      InsertUpdateDB('226','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','226','207');
      InsertUpdateDB('227','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','227','207');
      InsertUpdateDB('228','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','228','207');
      InsertUpdateDB('234','0','1','1','511','Rel. de Clientes','1','rel_clientes.bpl','TfRel_Clientes','234;','202');
      InsertUpdateDB('235','0','1','1','513','Rel. de Fornecedores','1','rel_fornecedores.bpl','TfRel_Fornecedores','235;','202');
      InsertUpdateDB('236','0','1','1','5.3','FINANCEIRO','1','CMD','Null','236;','197');
      InsertUpdateDB('238','0','1','1','514','Rel. Contas Pagar','1','rel_contas_pagar.bpl','TfRel_Contas_Pagar','238;','202');
      InsertUpdateDB('239','0','1','1','515','Rel. Contas Receber','1','rel_contas_receber.bpl','TfRel_Contas_Receber','239;','202');
      InsertUpdateDB('241','0','1','1','442','Planejamento Anual','1','plano_contas_planejamento.bpl','TfPlano_Contas_Planejamento','241;','166');
      InsertUpdateDB('243','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','243','241');
      InsertUpdateDB('244','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','244','241');
      InsertUpdateDB('245','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','245','241');
      InsertUpdateDB('246','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','246','241');
      InsertUpdateDB('247','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','247','241');
      InsertUpdateDB('254','0','1','1','531','Rel. Contas Receber X Pagar','1','rel_contas_receber_x_pagar.bpl','TfRel_Contas_Receber_X_Pagar','254;','236');
      InsertUpdateDB('256','0','1','1','533','Rel. Livro Caixa','1','rel_livro_caixa.bpl','TfRel_Livro_Caixa','256;','236');
      InsertUpdateDB('258','0','1','1','414','Lanç. Inst. Contas Pagar','1','lanc_auto_contas_pagar.bpl','TfLanc_Auto_Contas_Pagar','258;','174');
      InsertUpdateDB('259','0','1','1','424','Lanç. Inst. Contas Receber','1','lanc_auto_contas_receber.bpl','TfLanc_Auto_Contas_Receber','259;','186');
      InsertUpdateDB('262','0','1','1','534','Rel. Planejamento Anual','1','rel_plano_contas_planejamento.bpl','TfRel_Plano_Contas_Planejamento','262;','236');
      InsertUpdateDB('273','0','1','1','535','Rel. Plano de Contas','1','rel_plano_contas.bpl','TfRel_Plano_Contas','273;','236');
      InsertUpdateDB('275','0','1','1','532','Rel. Curva ABC','1','rel_abc_financas.bpl','TfRel_ABC_Financas','275;','236');
      InsertUpdateDB('284','0','1','1','536','Rel. Mov. Bancárias','1','rel_contas_bancarias.bpl','TfRel_Contas_Bancarias','284;','236');
      InsertUpdateDB('286','0','1','1','5.4','GRAFICOS','1','CMD','CMD','286;','197');
      InsertUpdateDB('288','0','1','1','541','Resumo Financeiro Anual','1','graf_resumo_financeiro_anual.bpl','TfGraf_Resumo_Financeiro_Anual','288;','286');
      InsertUpdateDB('317','0','1','1','2.3','FINANCEIROS','1','CMD','Null','317;','140');
      InsertUpdateDB('319','0','1','1','0','Visualiza Paineis Financeiros','1','Null','Null','319;','12');
      InsertUpdateDB('332','0','1','1','542','Gráf. Planejamento Anual','1','graf_planejamento_anual.bpl','TfGraf_Planejamento_Anual','332;','286');
      InsertUpdateDB('333','0','1','1','543','Gráf. C. Receber X C. Pagar','1','graf_contas_receber_pagar.bpl','TfGraf_Contas_Receber_Pagar','333;','286');
      InsertUpdateDB('334','0','1','1','544','Gráf. Evolutivo de Lucro Mensal','1','graf_evolutivo_anual.bpl','TfGraf_Evolutivo_Anual','334;','286');
      InsertUpdateDB('335','0','1','1','545','Gráf. Evolutivo por Documento','1','graf_forma_pagamento.bpl','TfGraf_Forma_Pagamento','335;','286');
      InsertUpdateDB('345','0','1','1','0','Visualiza Contas Pagar/Receber do Mês','1','Null','Null','345;','6');
      InsertUpdateDB('346','0','1','1','0','Visualiza Gráfico Evolutivo Anual','1','Null','Null','346;','6');
      InsertUpdateDB('347','0','1','1','0','Visualiza Resumo Financeiro','1','Null','Null','347;','6');
      InsertUpdateDB('349','0','1','1','3','ESTOQUE','1','CMD','Null','349;','Null');
      InsertUpdateDB('352','0','1','1','3.1','PRODUTOS','1','CMD','Null','352;','349');
      InsertUpdateDB('353','0','1','1','3.2','NOTA FISCAL','1','CMD','Null','353;','349');
      InsertUpdateDB('354','0','1','1','3.3','MOV. DE ESTOQUE','1','CMD','Null','354;','349');
      InsertUpdateDB('356','0','1','1','311','Cad. Produtos','1','produtos.bpl','TfProdutos','356;','352');
      InsertUpdateDB('357','0','1','1','312','Cad. Grupo de Produtos','1','grupos_produtos.bpl','TfGrupos_Produtos','357;','352');
      InsertUpdateDB('359','0','1','1','313','Cad. Marcas de Produtos','1','marcas_produtos.bpl','TfMarcasProdutos','359;','352');
      InsertUpdateDB('360','0','1','1','314','Cad. Modelo de Produtos','1','modelos_produtos.bpl','TfModelosProdutos','360;','352');
      InsertUpdateDB('361','0','1','1','315','Cad. Aliquotas ECF','1','aliquotas_produtos.bpl','TfAliquotas','361;','352');
      InsertUpdateDB('363','0','1','1','321','Entrada de Notas Fiscais','1','entrada_notafiscal.bpl','TfEntradaNotaFiscal','363;','353');
      InsertUpdateDB('364','0','1','1','331','Entrada Avulsa de Produtos','1','entrada_avulsa_prod.bpl','TfEntradaAvulsa','364;','354');
      InsertUpdateDB('365','0','1','1','332','Saída Avulsa de Produtos','1','saida_avulsa_prod.bpl','TfSaida_Avulsa_Prod','365;','354');
      InsertUpdateDB('366','0','1','1','333','Saída de Produtos por Avaria','1','saida_prod_avaria.bpl','TfSaida_Avaria','366;','354');
      InsertUpdateDB('368','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','368','356');
      InsertUpdateDB('369','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','369','356');
      InsertUpdateDB('371','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','371','356');
      InsertUpdateDB('372','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','372','356');
      InsertUpdateDB('373','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','373','357');
      InsertUpdateDB('374','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','374','357');
      InsertUpdateDB('375','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','375','357');
      InsertUpdateDB('376','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','376','357');
      InsertUpdateDB('378','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','378','359');
      InsertUpdateDB('379','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','379','359');
      InsertUpdateDB('380','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','380','359');
      InsertUpdateDB('381','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','381','359');
      InsertUpdateDB('383','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','383','360');
      InsertUpdateDB('384','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','384','360');
      InsertUpdateDB('385','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','385','360');
      InsertUpdateDB('386','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','386','360');
      InsertUpdateDB('388','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','388','361');
      InsertUpdateDB('389','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','389','361');
      InsertUpdateDB('390','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','390','361');
      InsertUpdateDB('391','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','391','361');
      InsertUpdateDB('393','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','393','363');
      InsertUpdateDB('394','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','394','363');
      InsertUpdateDB('395','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','395','363');
      InsertUpdateDB('396','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','396','363');
      InsertUpdateDB('397','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','397','363');
      InsertUpdateDB('398','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','398','364');
      InsertUpdateDB('399','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','399','364');
      InsertUpdateDB('400','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','400','364');
      InsertUpdateDB('401','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','401','364');
      InsertUpdateDB('402','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','402','364');
      InsertUpdateDB('403','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','403','365');
      InsertUpdateDB('404','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','404','365');
      InsertUpdateDB('405','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','405','365');
      InsertUpdateDB('406','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','406','365');
      InsertUpdateDB('407','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','407','365');
      InsertUpdateDB('408','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','408','366');
      InsertUpdateDB('409','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','409','366');
      InsertUpdateDB('410','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','410','366');
      InsertUpdateDB('411','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','411','366');
      InsertUpdateDB('412','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','412','366');
      InsertUpdateDB('419','0','1','1','537','Rel. Contábil','1','rel_contabil.bpl','TfRel_Contabil','419;','236');
      InsertUpdateDB('421','0','1','1','5.2','ESTOQUE','1','CMD','CMD','421;','197');
      InsertUpdateDB('424','0','1','1','521','Rel. Produtos','1','rel_produtos.bpl','TfRel_Produtos','424;','421');
      InsertUpdateDB('425','0','1','1','522','Rel. Grupos de Produtos','1','rel_grupos_produtos.bpl','TfRel_Grupos_Produtos','425;','421');
      InsertUpdateDB('426','0','1','1','523','Rel. Marcas Produtos','1','rel_marcas_produtos.bpl','TfRel_Marcas_Produtos','426;','421');
      InsertUpdateDB('427','0','1','1','524','Rel. Modelos Produtos','1','rel_modelos_produtos.bpl','TfRel_Modelos_Produtos','427;','421');
      InsertUpdateDB('428','0','1','1','525','Rel. Entrada Nota Fiscal','1','rel_entrada_nota_fiscal.bpl','TfRel_Entrada_Nota_Fiscal','428;','421');
      InsertUpdateDB('429','0','1','1','526','Rel. Entrada Avulsa de Produtos','1','rel_entrada_avulsa_produtos.bpl','TfRel_Entrada_Avulsa_Produtos','429;','421');
      InsertUpdateDB('430','0','1','1','527','Rel. Saída Avulsa de Produtos','1','rel_saida_avulsa_produtos.bpl','TfRel_Saida_Avulsa_Produtos','430;','421');
      InsertUpdateDB('431','0','1','1','528','Rel. Saída Produtos por Avaria','1','rel_saida_avaria_produtos.bpl','TfRel_Saida_Avaria','431;','421');
      InsertUpdateDB('433','0','1','1','512','Rel. de Praças','1','rel_pracas.bpl','TfRel_Pracas','433;','202');
    end else if fPrincipal.TipoSystem = sysOS then begin
      InsertUpdateDB('1','0','1','1','1','ADMINISTRATIVO','1','CMD','Null','1','Null');
      InsertUpdateDB('2','0','1','1','1.1','EMPRESA','1','CMD','Null','2','1');
      InsertUpdateDB('3','0','1','1','1.2','USUARIOS','1','CMD','Null','3','1');
      InsertUpdateDB('4','0','1','1','1.3','CONFIGURAÇÕES','1','CMD','Null','4','1');
      InsertUpdateDB('5','0','1','1','131','Configurações do Sistema','1','configuracao.bpl','TfConfiguracao','5','4');
      InsertUpdateDB('6','0','1','1','111','Cad. de Empresas','1','empresas.bpl','TfEmpresas','6','2');
      InsertUpdateDB('7','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','7','6');
      InsertUpdateDB('8','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','8','6');
      InsertUpdateDB('9','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','9','6');
      InsertUpdateDB('10','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','10','6');
      InsertUpdateDB('11','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','11','6');
      InsertUpdateDB('12','0','1','1','121','Cad. Usuarios','1','usuarios.bpl','TfUsuario','12','3');
      InsertUpdateDB('13','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','13','12');
      InsertUpdateDB('14','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','14','12');
      InsertUpdateDB('15','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','15','12');
      InsertUpdateDB('16','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','16','12');
      InsertUpdateDB('17','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','17','12');
      InsertUpdateDB('18','0','1','1','132','Menus do Sistema','1','menus.bpl','TfMenus','18','4');
      InsertUpdateDB('19','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','19','18');
      InsertUpdateDB('20','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','20','18');
      InsertUpdateDB('21','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','21','18');
      InsertUpdateDB('22','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','22','18');
      InsertUpdateDB('23','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','23','18');
      InsertUpdateDB('140','0','1','1','2','CADASTROS','1','CMD','Null','140;','Null');
      InsertUpdateDB('142','0','1','1','2.1','CLIENTES','1','CMD','Null','142;','140');
      InsertUpdateDB('143','0','1','1','2.2','FORNECEDORES','1','CMD','Null','143;','140');
      InsertUpdateDB('144','0','1','1','221','Cad. de Fornecedores','1','fornecedores.bpl','TfFornecedores','144;','143');
      InsertUpdateDB('146','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','146','144');
      InsertUpdateDB('147','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','147','144');
      InsertUpdateDB('148','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','148','144');
      InsertUpdateDB('149','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','149','144');
      InsertUpdateDB('150','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','150','144');
      InsertUpdateDB('152','0','1','1','211','Cad. de Clientes','1','clientes.bpl','TfClientes','152;','142');
      InsertUpdateDB('153','0','1','1','212','Cad. de Praças','1','pracas.bpl','TfPracas','153;','142');
      InsertUpdateDB('155','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','155','152');
      InsertUpdateDB('156','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','156','152');
      InsertUpdateDB('157','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','157','152');
      InsertUpdateDB('158','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','158','152');
      InsertUpdateDB('159','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','159','152');
      InsertUpdateDB('160','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','160','153');
      InsertUpdateDB('161','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','161','153');
      InsertUpdateDB('162','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','162','153');
      InsertUpdateDB('163','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','163','153');
      InsertUpdateDB('164','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','164','153');
      InsertUpdateDB('165','0','1','1','4','FINANCEIRO','1','CMD','Null','165;','Null');
      InsertUpdateDB('166','0','1','1','4.4','PLANO CONTAS','1','CMD','Null','166;','165');
      InsertUpdateDB('167','0','1','1','441','Cad. Plano de Contas','1','plano_contas.bpl','TfPlano_Contas','167;','166');
      InsertUpdateDB('169','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','169','167');
      InsertUpdateDB('170','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','170','167');
      InsertUpdateDB('171','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','171','167');
      InsertUpdateDB('172','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','172','167');
      InsertUpdateDB('173','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','173','167');
      InsertUpdateDB('174','0','1','1','4.1','CONTAS PAGAR','1','CMD','Null','174;','165');
      InsertUpdateDB('175','0','1','1','411','Cad. Contas a Pagar','1','contas_pagar.bpl','TfContas_Pagar','175;','174');
      InsertUpdateDB('177','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','177','175');
      InsertUpdateDB('178','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','178','175');
      InsertUpdateDB('179','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','179','175');
      InsertUpdateDB('180','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','180','175');
      InsertUpdateDB('181','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','181','175');
      InsertUpdateDB('182','0','1','1','412','Baixa C. Pagar Parcial','1','baixa_contas_pagar_parcial.bpl','TfBaixa_Contas_Pagar_Parcial','182;','174');
      InsertUpdateDB('184','0','1','1','413','Baixa C. Pagar Automático','1','baixa_contas_pagar_auto.bpl','TfBaixa_Contas_Pagar_Auto','184;','174');
      InsertUpdateDB('186','0','1','1','4.2','CONTAS RECEBER','1','CMD','Null','186;','165');
      InsertUpdateDB('187','0','1','1','421','Cad. Contas Receber','1','contas_receber.bpl','TfContas_Receber','187;','186');
      InsertUpdateDB('188','0','1','1','422','Baixa C. Receber Parcial','1','baixa_contas_receber_parcial.bpl','TfBaixa_Contas_Receber_Parcial','188;','186');
      InsertUpdateDB('189','0','1','1','423','Baixa C. Receber Automático','1','baixa_contas_receber_auto.bpl','TfBaixa_Contas_Receber_Auto','189;','186');
      InsertUpdateDB('191','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','191','187');
      InsertUpdateDB('192','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','192','187');
      InsertUpdateDB('193','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','193','187');
      InsertUpdateDB('194','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','194','187');
      InsertUpdateDB('195','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','195','187');
      InsertUpdateDB('196','0','1','1','4.3','CONTAS BANCARIAS','1','CMD','Null','196;','165');
      InsertUpdateDB('197','0','1','1','7','RELATORIOS/GRAFICOS','1','CMD','Null','197;','Null');
      InsertUpdateDB('202','0','1','1','7.1','CADASTROS','1','CMD','Null','202;','197');
      InsertUpdateDB('204','0','1','1','231','Cad. de Bancos/Financeiras','1','bancos.bpl','TfBancos','204;','317');
      InsertUpdateDB('205','0','1','1','431','Cad. Contas Bancárias','1','contas_bancarias.bpl','TfContas_Bancarias','205;','196');
      InsertUpdateDB('206','0','1','1','232','Cad. Tipos de Movimentação','1','tipos_movimentacoes_bancarias.bpl','TfTipos_Movimentacoes_Bancarias','206;','317');
      InsertUpdateDB('207','0','1','1','432','Movimentação Bancária','1','movimentacao_bancaria.bpl','TfMovimentacao_Bancaria','207;','196');
      InsertUpdateDB('209','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','209','204');
      InsertUpdateDB('210','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','210','204');
      InsertUpdateDB('211','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','211','204');
      InsertUpdateDB('212','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','212','204');
      InsertUpdateDB('213','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','213','204');
      InsertUpdateDB('214','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','214','205');
      InsertUpdateDB('215','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','215','205');
      InsertUpdateDB('216','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','216','205');
      InsertUpdateDB('217','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','217','205');
      InsertUpdateDB('218','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','218','205');
      InsertUpdateDB('219','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','219','206');
      InsertUpdateDB('220','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','220','206');
      InsertUpdateDB('221','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','221','206');
      InsertUpdateDB('222','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','222','206');
      InsertUpdateDB('223','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','223','206');
      InsertUpdateDB('224','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','224','207');
      InsertUpdateDB('225','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','225','207');
      InsertUpdateDB('226','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','226','207');
      InsertUpdateDB('227','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','227','207');
      InsertUpdateDB('228','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','228','207');
      InsertUpdateDB('234','0','1','1','711','Rel. de Clientes','1','rel_clientes.bpl','TfRel_Clientes','234;','202');
      InsertUpdateDB('235','0','1','1','713','Rel. de Fornecedores','1','rel_fornecedores.bpl','TfRel_Fornecedores','235;','202');
      InsertUpdateDB('236','0','1','1','7.3','FINANCEIRO','1','CMD','Null','236;','197');
      InsertUpdateDB('238','0','1','1','714','Rel. Contas Pagar','1','rel_contas_pagar.bpl','TfRel_Contas_Pagar','238;','202');
      InsertUpdateDB('239','0','1','1','715','Rel. Contas Receber','1','rel_contas_receber.bpl','TfRel_Contas_Receber','239;','202');
      InsertUpdateDB('241','0','1','1','442','Planejamento Anual','1','plano_contas_planejamento.bpl','TfPlano_Contas_Planejamento','241;','166');
      InsertUpdateDB('243','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','243','241');
      InsertUpdateDB('244','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','244','241');
      InsertUpdateDB('245','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','245','241');
      InsertUpdateDB('246','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','246','241');
      InsertUpdateDB('247','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','247','241');
      InsertUpdateDB('254','0','1','1','731','Rel. Contas Receber X Pagar','1','rel_contas_receber_x_pagar.bpl','TfRel_Contas_Receber_X_Pagar','254;','236');
      InsertUpdateDB('256','0','1','1','733','Rel. Livro Caixa','1','rel_livro_caixa.bpl','TfRel_Livro_Caixa','256;','236');
      InsertUpdateDB('258','0','1','1','414','Lanç. Inst. Contas Pagar','1','lanc_auto_contas_pagar.bpl','TfLanc_Auto_Contas_Pagar','258;','174');
      InsertUpdateDB('259','0','1','1','424','Lanç. Inst. Contas Receber','1','lanc_auto_contas_receber.bpl','TfLanc_Auto_Contas_Receber','259;','186');
      InsertUpdateDB('262','0','1','1','734','Rel. Planejamento Anual','1','rel_plano_contas_planejamento.bpl','TfRel_Plano_Contas_Planejamento','262;','236');
      InsertUpdateDB('273','0','1','1','735','Rel. Plano de Contas','1','rel_plano_contas.bpl','TfRel_Plano_Contas','273;','236');
      InsertUpdateDB('275','0','1','1','732','Rel. Curva ABC','1','rel_abc_financas.bpl','TfRel_ABC_Financas','275;','236');
      InsertUpdateDB('284','0','1','1','736','Rel. Mov. Bancárias','1','rel_contas_bancarias.bpl','TfRel_Contas_Bancarias','284;','236');
      InsertUpdateDB('286','0','1','1','7.6','GRAFICOS','1','CMD','CMD','286;','197');
      InsertUpdateDB('288','0','1','1','761','Resumo Financeiro Anual','1','graf_resumo_financeiro_anual.bpl','TfGraf_Resumo_Financeiro_Anual','288;','286');
      InsertUpdateDB('317','0','1','1','2.3','FINANCEIROS','1','CMD','Null','317;','140');
      InsertUpdateDB('319','0','1','1','0','Visualiza Paineis Financeiros','1','Null','Null','319;','12');
      InsertUpdateDB('332','0','1','1','762','Gráf. Planejamento Anual','1','graf_planejamento_anual.bpl','TfGraf_Planejamento_Anual','332;','286');
      InsertUpdateDB('333','0','1','1','763','Gráf. C. Receber X C. Pagar','1','graf_contas_receber_pagar.bpl','TfGraf_Contas_Receber_Pagar','333;','286');
      InsertUpdateDB('334','0','1','1','764','Gráf. Evolutivo de Lucro Mensal','1','graf_evolutivo_anual.bpl','TfGraf_Evolutivo_Anual','334;','286');
      InsertUpdateDB('335','0','1','1','765','Gráf. Evolutivo por Documento','1','graf_forma_pagamento.bpl','TfGraf_Forma_Pagamento','335;','286');
      InsertUpdateDB('345','0','1','1','0','Visualiza Contas Pagar/Receber do Mês','1','Null','Null','345;','6');
      InsertUpdateDB('346','0','1','1','0','Visualiza Gráfico Evolutivo Anual','1','Null','Null','346;','6');
      InsertUpdateDB('347','0','1','1','0','Visualiza Resumo Financeiro','1','Null','Null','347;','6');
      InsertUpdateDB('349','0','1','1','3','ESTOQUE','1','CMD','Null','349;','Null');
      InsertUpdateDB('352','0','1','1','3.1','PRODUTOS','1','CMD','Null','352;','349');
      InsertUpdateDB('353','0','1','1','3.2','NOTA FISCAL','1','CMD','Null','353;','349');
      InsertUpdateDB('354','0','1','1','3.3','MOV. DE ESTOQUE','1','CMD','Null','354;','349');
      InsertUpdateDB('356','0','1','1','311','Cad. Produtos','1','produtos.bpl','TfProdutos','356;','352');
      InsertUpdateDB('357','0','1','1','312','Cad. Grupo de Produtos','1','grupos_produtos.bpl','TfGrupos_Produtos','357;','352');
      InsertUpdateDB('359','0','1','1','313','Cad. Marcas de Produtos','1','marcas_produtos.bpl','TfMarcasProdutos','359;','352');
      InsertUpdateDB('360','0','1','1','314','Cad. Modelo de Produtos','1','modelos_produtos.bpl','TfModelosProdutos','360;','352');
      InsertUpdateDB('361','0','1','1','315','Cad. Aliquotas ECF','1','aliquotas_produtos.bpl','TfAliquotas','361;','352');
      InsertUpdateDB('363','0','1','1','321','Entrada de Notas Fiscais','1','entrada_notafiscal.bpl','TfEntradaNotaFiscal','363;','353');
      InsertUpdateDB('364','0','1','1','331','Entrada Avulsa de Produtos','1','entrada_avulsa_prod.bpl','TfEntradaAvulsa','364;','354');
      InsertUpdateDB('365','0','1','1','332','Saída Avulsa de Produtos','1','saida_avulsa_prod.bpl','TfSaida_Avulsa_Prod','365;','354');
      InsertUpdateDB('366','0','1','1','333','Saída de Produtos por Avaria','1','saida_prod_avaria.bpl','TfSaida_Avaria','366;','354');
      InsertUpdateDB('368','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','368','356');
      InsertUpdateDB('369','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','369','356');
      InsertUpdateDB('371','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','371','356');
      InsertUpdateDB('372','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','372','356');
      InsertUpdateDB('373','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','373','357');
      InsertUpdateDB('374','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','374','357');
      InsertUpdateDB('375','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','375','357');
      InsertUpdateDB('376','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','376','357');
      InsertUpdateDB('378','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','378','359');
      InsertUpdateDB('379','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','379','359');
      InsertUpdateDB('380','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','380','359');
      InsertUpdateDB('381','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','381','359');
      InsertUpdateDB('383','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','383','360');
      InsertUpdateDB('384','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','384','360');
      InsertUpdateDB('385','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','385','360');
      InsertUpdateDB('386','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','386','360');
      InsertUpdateDB('388','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','388','361');
      InsertUpdateDB('389','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','389','361');
      InsertUpdateDB('390','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','390','361');
      InsertUpdateDB('391','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','391','361');
      InsertUpdateDB('393','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','393','363');
      InsertUpdateDB('394','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','394','363');
      InsertUpdateDB('395','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','395','363');
      InsertUpdateDB('396','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','396','363');
      InsertUpdateDB('397','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','397','363');
      InsertUpdateDB('398','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','398','364');
      InsertUpdateDB('399','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','399','364');
      InsertUpdateDB('400','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','400','364');
      InsertUpdateDB('401','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','401','364');
      InsertUpdateDB('402','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','402','364');
      InsertUpdateDB('403','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','403','365');
      InsertUpdateDB('404','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','404','365');
      InsertUpdateDB('405','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','405','365');
      InsertUpdateDB('406','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','406','365');
      InsertUpdateDB('407','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','407','365');
      InsertUpdateDB('408','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','408','366');
      InsertUpdateDB('409','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','409','366');
      InsertUpdateDB('410','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','410','366');
      InsertUpdateDB('411','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','411','366');
      InsertUpdateDB('412','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','412','366');
      InsertUpdateDB('419','0','1','1','737','Rel. Contábil','1','rel_contabil.bpl','TfRel_Contabil','419;','236');
      InsertUpdateDB('421','0','1','1','7.2','ESTOQUE','1','CMD','CMD','421;','197');
      InsertUpdateDB('424','0','1','1','721','Rel. Produtos','1','rel_produtos.bpl','TfRel_Produtos','424;','421');
      InsertUpdateDB('425','0','1','1','722','Rel. Grupos de Produtos','1','rel_grupos_produtos.bpl','TfRel_Grupos_Produtos','425;','421');
      InsertUpdateDB('426','0','1','1','723','Rel. Marcas Produtos','1','rel_marcas_produtos.bpl','TfRel_Marcas_Produtos','426;','421');
      InsertUpdateDB('427','0','1','1','724','Rel. Modelos Produtos','1','rel_modelos_produtos.bpl','TfRel_Modelos_Produtos','427;','421');
      InsertUpdateDB('428','0','1','1','725','Rel. Entrada Nota Fiscal','1','rel_entrada_nota_fiscal.bpl','TfRel_Entrada_Nota_Fiscal','428;','421');
      InsertUpdateDB('429','0','1','1','726','Rel. Entrada Avulsa de Produtos','1','rel_entrada_avulsa_produtos.bpl','TfRel_Entrada_Avulsa_Produtos','429;','421');
      InsertUpdateDB('430','0','1','1','727','Rel. Saída Avulsa de Produtos','1','rel_saida_avulsa_produtos.bpl','TfRel_Saida_Avulsa_Produtos','430;','421');
      InsertUpdateDB('431','0','1','1','728','Rel. Saída Produtos por Avaria','1','rel_saida_avaria_produtos.bpl','TfRel_Saida_Avaria','431;','421');
      InsertUpdateDB('433','0','1','1','712','Rel. de Praças','1','rel_pracas.bpl','TfRel_Pracas','433;','202');
      InsertUpdateDB('434','0','1','1','5','VENDAS','1','CMD','Null','434;','Null');
      InsertUpdateDB('435','0','1','1','5.1','PRECIFICAÇÕES','1','CMD','Null','435;','434');
      InsertUpdateDB('436','0','1','1','511','Cad. Tabela de Preço','1','tabela_preco.bpl','TfTabelaPreco','436;','435');
      InsertUpdateDB('438','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','438','436');
      InsertUpdateDB('439','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','439','436');
      InsertUpdateDB('440','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','440','436');
      InsertUpdateDB('441','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','441','436');
      InsertUpdateDB('442','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','442','436');
      InsertUpdateDB('443','0','1','1','6','SERVICOS','1','CMD','Null','443;','Null');
      InsertUpdateDB('444','0','1','1','6.1','ORDEM DE SERVIÇO','1','CMD','Null','444;','443');
      InsertUpdateDB('445','0','1','1','611','Ordem de Serviço','1','ordem_servico.bpl','TfOrdemServico','445;','444');
      InsertUpdateDB('447','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','447','445');
      InsertUpdateDB('448','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','448','445');
      InsertUpdateDB('449','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','449','445');
      InsertUpdateDB('450','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','450','445');
      InsertUpdateDB('451','0','1','1','0','Imprimir(Alt + P)','1','Null','btnImprimir','451','445');
      InsertUpdateDB('453','0','1','1','0','Permite Alt. Vlr. Venda','1','Null','Null','453;','445');
      InsertUpdateDB('454','0','1','1','0','Permite Vlr. Mínimo','1','Null','Null','454;','445');
      InsertUpdateDB('455','0','1','1','0','Permite Vlr. Especial','1','Null','Null','455;','445');
      InsertUpdateDB('457','0','1','1','0','Permite Vlr. Atacado','1','Null','Null','457;','445');
      InsertUpdateDB('459','0','1','1','7.4','VENDAS','1','CMD','Null','459;','197');
      InsertUpdateDB('460','0','1','1','7.5','SERVICOS','1','CMD','Null','460;','197');
      InsertUpdateDB('461','0','1','1','741','Rel. Tabela de Preço','1','rel_tabela_preco.bpl','TfRel_Tabela_Preco','461;','459');
      InsertUpdateDB('462','0','1','1','751','Rel. Ordem de Serviço','1','rel_ordem_servicos.bpl','TfRel_Ordem_Servico','462;','460');
      InsertUpdateDB('471','0','1','1','613','Termos de Recebimento','1','termos_recebimento.bpl','TfTermo_Recebimento','471;','444');
      InsertUpdateDB('473','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','473','471');
      InsertUpdateDB('474','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','474','471');
      InsertUpdateDB('475','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','475','471');
      InsertUpdateDB('476','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','476','471');
      InsertUpdateDB('477','0','1','1','614','Termos de Retirada','1','termo_retirada.bpl','TfTermo_Retirada','477;','444');
      InsertUpdateDB('479','0','1','1','0','Novo(Alt + N)','1','Null','btnNovo','479','477');
      InsertUpdateDB('480','0','1','1','0','Editar(Alt + E)','1','Null','btnEditar','480','477');
      InsertUpdateDB('481','0','1','1','0','Excluir(Alt + X)','1','Null','btnExcluir','481','477');
      InsertUpdateDB('482','0','1','1','0','Localizar(Alt + L)','1','Null','btnLocalizar','482','477');
    end;
  finally
  end;
end;

procedure AtualizaDataBase;
var
  qryCons : TSQLQuery;
begin
  try
    funcLocal := fPrincipal.funcPrincipal;
    qryCons   := TSQLQuery.Create(nil);
    qryCons.SQLConnection := funcLocal.Conexao;
    try
      with qryCons do begin
        Close;
        sql.Clear;
        sql.Add('SELECT FIRST 1');
        sql.Add('      CSIS_VERSION_SYSTEM');
        sql.Add('FROM  CONF_SISTEMA');
        Open;
        if qryCons.Fields[0].AsInteger < Version then begin
          funcLocal.Alerta('I M P O R T A N T E ! ! !'+#13+#13+'Será realizado a'+
                           ' atualização de sua base de dados, este processo '+
                           'poderá levar alguns minutos até ser concluído é importante '+
                           'que antes de continuar você faça o backup de sua base de dados.'+#13+#13+
                             'Clique em OK para continuar.',0);
          DomainsSystem;
          Clientes;
          ConfOS;
          ConfSystema;
          ContaBancaria;
          ContaBancariaMov;
          ContaPagar;
          ContaPagarAcerto;
          ContaReceber;
          ContaReceberAcerto;
          Empresas;
          EntradaAvulsa;
          EntradaAvulsaItem;
          Estoque;
          EstoqueMov;
          Fornecedores;
          Genericas;
          LivroCaixa;
          Login;
          Menus;
          NotaFiscal;
          NotaFiscalAcerto;
          NotaFiscalItem;
          OrdemServico;
          OrdemServicoAcerto;
          OrdemServicoItem;
          OrdemServicoTransf;
          OrdemServicoTransfItem;
          PlanoContas;
          PlanoContasPlanejamento;
          Produtos;
          ProdutosBar;
          ProdutosComp;
          SaidaAvaria;
          SaidaAvariaItem;
          SaidaAvulsa;
          SaidaAvulsaItem;
          TabelaPreco;
          TabelaPrecoItem;
          TGener;
          TransfEstoque;
          TransfEstoqueItem;
          Usuarios;
          UsuarioEmpr;
          UsuarioM;
          ForeignKey;
          GrantSelect;
          funcLocal.InstructionSQL('UPDATE CONF_SISTEMA SET CSIS_VERSION_SYSTEM = ' + IntToStr(Version));
        end else Exit;
      end;
    except begin
      funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_VERSION_SYSTEM INTEGER');
      funcLocal.InstructionSQL('UPDATE CONF_SISTEMA SET CSIS_VERSION_SYSTEM = ' + IntToStr(Version -1));
      AtualizaDataBase;
    end; end;
  finally
    qryCons.Close;
    FreeAndNil(qryCons);
  end;
end;

procedure DomainsSystem;
var
  sltTMP : TStringList;
begin
  try
    fSplash.LabelProgress.Caption := 'Atualizando Domains';
    fSplash.Repaint;
    Sleep(200);
    sltTMP := TStringList.Create;
    with sltTMP do begin

      Clear;
      Add('CREATE DOMAIN D_BAIRRO AS');
      Add('  VARCHAR(100) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_BLOB AS');
      Add('  BLOB');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_CEP AS');
      Add('  CHAR(10) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_CIDADE AS');
      Add('  VARCHAR(150) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_CODIGO AS');
      Add('  VARCHAR(150) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_COD_BARRAS AS');
      Add('  VARCHAR(25) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_CPF_CNPJ AS');
      Add('  VARCHAR(18) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_DESCRICAO_G AS');
      Add('  VARCHAR(1000) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_DESCRICAO_GG AS');
      Add('  VARCHAR(2500) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_DESCRICAO_M AS');
      Add('  VARCHAR(250) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_DESCRICAO_MM AS');
      Add('  VARCHAR(500) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_DESCRICAO_P AS');
      Add('  VARCHAR(50) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_DESCRICAO_PP AS');
      Add('  VARCHAR(100) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_EMAIL AS');
      Add('  VARCHAR(100) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_ENDERECO AS');
      Add('  VARCHAR(150) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_FANTASIA AS');
      Add('  VARCHAR(150) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_FONE AS');
      Add('  VARCHAR(13) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_HORA AS');
      Add('  VARCHAR(8) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_INSC_EST AS');
      Add('  VARCHAR(30) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_LOGIN AS');
      Add('  CHAR(8) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_NCM AS');
      Add('  VARCHAR(8) CHARACTER SET WIN1253');
      Add('  COLLATE WIN1253');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_NOME AS');
      Add('  VARCHAR(100) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_NR_DOC AS');
      Add('  VARCHAR(25) CHARACTER SET WIN1253');
      Add('  COLLATE WIN1253');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_NUMERIC AS');
      Add('  NUMERIC(15, 4)');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_RAZAO_SOCIAL AS');
      Add('  VARCHAR(150) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_RG AS');
      Add('  VARCHAR(20) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_SENHA AS');
      Add('  CHAR(8) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_SERIE AS');
      Add('  VARCHAR(15) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_SEXO AS');
      Add('  CHAR(1) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_SITE AS');
      Add('  VARCHAR(100) CHARACTER SET ISO8859_1');
      Add('  COLLATE ISO8859_1');
      funcLocal.InstructionSQL(sltTMP.Text);

      Clear;
      Add('CREATE DOMAIN D_UNIDADE AS');
      Add('  CHAR(2) CHARACTER SET WIN1253');
      Add('  COLLATE WIN1253');
      funcLocal.InstructionSQL(sltTMP.Text);
    end;
  finally
    FreeAndNil(sltTMP);
    fSplash.LabelProgress.Caption := 'Atualizando Domains - [OK]';
    fSplash.Repaint;
    Sleep(200);
  end;
end;

procedure Clientes;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Clientes';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CLIENTES(CLIE_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_RAZAO_SOCIAL D_RAZAO_SOCIAL NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_FANTASIA D_FANTASIA');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_CEP D_CEP');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_ENDERECO D_ENDERECO NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_BAIRRO D_BAIRRO NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_GENE_EMPR_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_GENE_TGEN_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_GENE_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_RG D_RG');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_TIPO CHAR(1) CHARACTER SET WIN1253 NOT NULL COLLATE WIN1253');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_CNPJ_CPF D_CPF_CNPJ');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_SITE D_SITE');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_EMAIL D_EMAIL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_TELEFONE1 D_FONE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_TELEFONE2 D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_TELEFONE3 D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_TELEFONE4 D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CLIENTES ADD CLIE_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Clientes - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ConfOS;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Conf. Ordem de Serviço';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONF_ORDEM_SERVICO (CFOS_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_CSIS_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FCOD_EQUIP D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FEQUIPAMENTO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FUNIDADE D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FMARCA D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FMODELO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FGARANTIA D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FNRPEDIDO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FCOD_FORNECEDOR D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FFORNECEDOR D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FCOD_TECNICO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FTECNICO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FDTCADASTRO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FDTINSTALACAO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FDTENTREGA D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FGRUPO_EQUIP D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FGRUPO_PECAS_SERVICOS D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_FDTAGENDAMENTO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_DIAS_REAGENDAMENTO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_ORDEM_SERVICO ADD CFOS_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Conf. Ordem de Serviço - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ConfSystema;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Conf. do Sistema';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONF_SISTEMA (CSIS_EMPR_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_REPORTA_ERROS INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_VISUAL_FINANCEIRO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_JURO NUMERIC(14 4)');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_MORA NUMERIC(14 4)');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_PERCENTE_RENDA INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_ESTOQUE_NEGATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_VERSION_SYSTEM INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_TPRC_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_TPRC_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_CLIE_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_CLIE_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_REAGENDAR_OS INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_FORCAR_REAGENDA INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_INTEGRAR_PRODUTOS INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_INTEGRAR_CLIENTES INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONF_SISTEMA ADD CSIS_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Conf. do Sistema - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ContaBancaria;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Contas Bancárias';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONTAS_BANCARIAS (CBCO_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_GENE_EMPR_ID_BCO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_GENE_TGEN_ID_BCO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_GENE_ID_BCO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_AGENCIA D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_CONTA D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_TIPO CHAR(1) CHARACTER SET WIN1253 NOT NULL COLLATE WIN1253');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_GERENTE D_NOME');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_VALOR_INICIAL NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_SALDO_ATUAL NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_LIMITE NUMERIC(15 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_DESCRICAO D_DESCRICAO_M NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_DIA_LIMITE INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS ADD CBCO_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Contas Bancárias - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ContaBancariaMov;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Contas Bancárias Mov.';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONTAS_BANCARIAS_MOV (CBMV_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_CBCO_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_CBCO_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_GENE_EMPR_ID_TIPO_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_GENE_TGEN_ID_TIPO_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_GENE_ID_TIPO_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_VALOR_MOV NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_SALDO_DISP NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_BANCARIAS_MOV ADD CBMV_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Contas Bancárias Mov. - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ContaPagar;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Contas Pagar';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONTAS_PAGAR (CPAG_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_NR_DOC VARCHAR(20) CHARACTER SET WIN1253 COLLATE WIN1253');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_PROVENIENTE D_DESCRICAO_M NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_FORN_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_PLCT_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_PLCT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_DTA_EMISSAO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_DTA_VCTO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_DTA_PGTO DATE');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_VALOR_DOC NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_VALOR_JUROS NUMERIC(8 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_VALOR_MORA NUMERIC(8 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_STATUS CHAR(1) CHARACTER SET WIN1253 NOT NULL COLLATE WIN1253');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_VALOR_PAGO NUMERIC(15 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_GENE_EMPR_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_GENE_TGEN_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_GENE_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_OBS BLOB SEGMENT SIZE 1');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_USER_ID_CANC INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_DTA_CANC DATE');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_MOTIVO_CANC VARCHAR(50) CHARACTER SET WIN1253 COLLATE WIN1253');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_VIA_BANCO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_CBCO_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_CBCO_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_NFAC_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_NFAC_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_NFAC_NFEN_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_NFAC_NFEN_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_DTA_CADASTRO DATE');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR ADD CPAG_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Contas Pagar - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ContaPagarAcerto;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Contas Pagar Acertos';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONTAS_PAGAR_ACERTOS (ACPG_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_CPAG_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_CPAG_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_GENE_EMPR_ID_TIPO_PGTO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_GENE_TGEN_ID_TIPO_PGTO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_GENE_ID_TIPO_PGTO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_VALOR_DOC NUMERIC(15 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD ACPG_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Contas Pagar Acertos - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ContaReceber;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Contas Receber';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONTAS_RECEBER (CREC_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_NR_DOC VARCHAR(20) CHARACTER SET WIN1253 COLLATE WIN1253');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_PROVENIENTE D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_CLIE_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_CLIE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_PLCT_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_PLCT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_DTA_EMISSAO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_DTA_VCTO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_DTA_PGTO DATE');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_VALOR_DOC NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_VALOR_JUROS NUMERIC(8 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_VALOR_MORA NUMERIC(8 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_STATUS CHAR(1) CHARACTER SET WIN1253 NOT NULL COLLATE WIN1253');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_VALOR_PAGO NUMERIC(15 2)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_GENE_EMPR_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_GENE_TGEN_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_GENE_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_OBS BLOB');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_USER_ID_CANC INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_DTA_CANC DATE');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_MOTIVO_CANC D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_VIA_BANCO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_CBCO_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_CBCO_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_ODAC_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_ODAC_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_ODAC_ORDS_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_ODAC_ORDS_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_ODAC_ORDS_CLIE_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_ODAC_ORDS_CLIE_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER ADD CREC_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Contas Receber - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ContaReceberAcerto;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Contas Receber Acertos';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE CONTAS_RECEBER_ACERTOS (ACRE_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_CREC_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_CREC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_GENE_EMPR_ID_TIPO_PGTO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_GENE_TGEN_ID_TIPO_PGTO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_GENE_ID_TIPO_PGTO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_VALOR_DOC NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD ACRE_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Contas Receber Acertos - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Empresas;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Empresas';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE EMPRESAS (EMPR_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_NOME_FANTASIA D_FANTASIA');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_RAZAO_SOCIAL D_RAZAO_SOCIAL NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_ATIVO INTEGER DEFAULT 0 NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_CNPJ D_CPF_CNPJ');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_IE D_INSC_EST');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_CEP D_CEP');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_ENDERECO D_ENDERECO');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_NR_ENDERECO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_BAIRRO D_BAIRRO');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_COMPLEMENTO D_DESCRICAO_PP');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_GENE_EMPR_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_GENE_TGEN_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_GENE_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_TELEFONE D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_FAX D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_SITE D_SITE');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_EMAIL D_EMAIL');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_LOGOTIPO BLOB');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE EMPRESAS ADD EMPR_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Empresas - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure EntradaAvulsa;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Entrada Avulsa';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ENTRADA_AVULSA (ENAV_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA ADD ENAV_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA ADD ENAV_NR_DOCUMENTO D_NR_DOC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA ADD ENAV_CONCILIADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA ADD ENAV_OBS D_BLOB');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA ADD ENAV_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA ADD ENAV_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Entrada Avulsa - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure EntradaAvulsaItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Entrada Avulsa Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ENTRADA_AVULSA_ITENS (ENIT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_ENAV_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_ENAV_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_QTDE NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ENTRADA_AVULSA_ITENS ADD ENIT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Entrada Avulsa Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Estoque;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Estoque';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ESTOQUE (ESTQ_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE ADD ESTQ_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE ADD ESTQ_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE ADD ESTQ_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE ADD ESTQ_EST_ATUAL NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE ADD ESTQ_EST_DISP NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE ADD ESTQ_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE ADD ESTQ_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Estoque - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure EstoqueMov;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Estoque Mov.';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ESTOQUE_MOV (ESTM_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_ESTQ_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_ESTQ_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_GENE_EMPR_ID_ORIGEM INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_GENE_TGEN_ID_ORIGEM INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_GENE_ID_ORIGEM INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_QTDE_MOV NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ESTOQUE_MOV ADD ESTM_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Estoque Mov. - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Fornecedores;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Fornecedores';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE FORNECEDORES (FORN_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_RAZAO_SOCIAL D_RAZAO_SOCIAL NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_NOME_FANTASIA D_FANTASIA');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_CNPJ_CPF D_CPF_CNPJ NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_IE D_INSC_EST');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_CEP D_CEP NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_ENDERECO D_ENDERECO NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_BAIRRO VARCHAR(100) CHARACTER SET ISO8859_1 COLLATE ISO8859_1');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_GENE_EMPR_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_GENE_TGEN_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_GENE_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_CONTATO D_NOME');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_TELEFONE D_FONE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_FAX D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_SITE D_SITE');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_EMAIL D_EMAIL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_TIPO CHAR(1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE FORNECEDORES ADD FORN_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Fornecedores - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Genericas;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Generica';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE GENERICA (GENE_EMPR_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_TGEN_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_DESCR D_DESCRICAO_M');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_COMENTARIO D_DESCRICAO_MM');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_NUMBER1 INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_NUMBER2 INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_NUMBER3 INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_PAR1 D_DESCRICAO_M');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_PAR2 D_DESCRICAO_M');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_PAR3 D_DESCRICAO_M');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_GENE_EMPR_ID_PROP INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_GENE_TGEN_ID_PROP INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_GENE_ID_PROD INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE GENERICA ADD GENE_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Generica - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure LivroCaixa;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Livro Caixa';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE LIVRO_CAIXA (LCAX_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_PLCT_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_PLCT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_GENE_EMPR_ID_TP_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_GENE_TGEN_ID_TP_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_GENE_ID_TP_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_CAMPO1_TAB_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_CAMPO2_TAB_MOV INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_CAMPO3_TAB_MOV INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_DTA_LANCAMENTO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_VLR_LANCAMENTO NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_VLR_SALDO NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_GENE_EMPR_ID_TP_ORIG INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_GENE_TGEN_ID_TP_ORIG INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_GENE_ID_TP_ORIG INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LIVRO_CAIXA ADD LCAX_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Livro Caixa - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Login;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Login';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE LOGIN (LOGI_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE LOGIN ADD LOGI_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LOGIN ADD LOGI_DTA_LOG DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE LOGIN ADD LOGI_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Login - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Menus;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Menus';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE MENU (MENU_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_GENE_EMPR_ID_TP INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_GENE_TGEN_ID_TP INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_GENE_ID_TP INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_CODIGO VARCHAR(10) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_DESCRICAO D_DESCRICAO_PP');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_NOME_BPL D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_CLASSE_FORM_BPL D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_PARAMETRO_ABERTURA D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_IMAGE1 BLOB');
  funcLocal.InstructionSQL('ALTER TABLE MENU ADD MENU_MENU_ID INTEGER');
  fSplash.LabelProgress.Caption := 'Atualizando Menus - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure NotaFiscal;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Nota Fiscal';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE NOTA_FISCAL (NFEN_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_FORN_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_DTA_EMISSAO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_DTA_ENTRADA DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_NR_NOTA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_NR_SERIE INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_VLR_TOTAL_PROD NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_VLR_TOTAL_NOTA NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_CONCILIADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_DTA_CONCILIADO DATE');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_DTA_CANCELADO DATE');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_USER_ID_CANC INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_MOTIVO_CANC D_BLOB');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_VLR_TOTAL_DESC NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL ADD NFEN_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Nota Fiscal - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure NotaFiscalAcerto;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Nota Fiscal Acertos';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE NOTA_FISCAL_ACERTOS (NFAC_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_NFEN_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_NFEN_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_DESCRICAO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_NR_DOCUMENTO D_NR_DOC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_GENE_EMPR_ID_TP_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_GENE_TGEN_ID_TP_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_GENE_ID_TP_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_DTA_LANC DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_DTA_VCTO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_VALOR_DOC NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_VALOR_JUROS NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_VALOR_MORA NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_CONCILIADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ACERTOS ADD NFAC_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Nota Fiscal Acertos - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure NotaFiscalItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Nota Fiscal Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE NOTA_FISCAL_ITENS (NFIT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_NFEN_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_NFEN_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_QTDE NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_VLR_UNITARIO NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_VLR_TOTAL_ITEM NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE NOTA_FISCAL_ITENS ADD NFIT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Nota Fiscal Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure OrdemServico;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ORDEM_SERVICO (ORDS_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_CLIE_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_CLIE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_TPRC_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_TPRC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_DTA_INSTALACAO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_GENE_EMPR_ID_TIPO_OS INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_GENE_TGEN_ID_TIPO_OS INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_GENE_ID_TIPO_OS INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_STATUS INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_USER_ID_TEC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_PROD_ID_EQUIP INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_PROD_EMPR_ID_EQUIP INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_NR_PEDIDO_SERIE D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_VLR_TOTAL_OS NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_VLR_DESCONTO NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_VLR_PAGO NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_OBSERVACAO D_BLOB');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_INFORMACOES D_BLOB');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_USER_ID_CANC INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_MOTIVO_CANC D_DESCRICAO_PP');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_DTA_CANC DATE');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_DTA_ENTREGA DATE');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_USER_ID_ENTREG INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_BAIXADO_ESTOQUE INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_FORN_ID_EQUIP INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO ADD ORDS_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure OrdemServicoAcerto;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Acertos';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ORDEM_SERVICO_ACERTOS (ODAC_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_ORDS_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_ORDS_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_ORDS_CLIE_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_ORDS_CLIE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_GENE_EMPR_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_GENE_TGEN_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_GENE_ID_TIPO_DOC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_GENE_EMPR_ID_BCO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_GENE_TGEN_ID_BCO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_GENE_ID_BCO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_NR_DOC D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_NR_AGENCIA D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_NR_CONTA D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_TITULAR D_NOME');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_DTA_VCTO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_VLR_DOC NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_STATUS INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD ODAC_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Acertos - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure OrdemServicoItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ORDEM_SERVICO_ITENS (ODIT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_ORDS_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_ORDS_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_ORDS_CLIE_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_ORDS_CLIE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_TPIT_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_TPIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_TPIT_TPRC_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_TPIT_TPRC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_TPIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_TPIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_VLR_UNITARIO NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_QTDE NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_VLR_TOTAL NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_USER_ID_TEC INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_ITENS ADD ODIT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure OrdemServicoTransf;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Transf.';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ORDEM_SERVICO_TRANSF (OSTF_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_ORDS_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_ORDS_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_ORDS_CLIE_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_ORDS_CLIE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_USER_ID_TEC_ORIG INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_USER_ID_TEC_DEST INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF ADD OSTF_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Transf. - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure OrdemServicoTransfItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Transf. Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE ORDEM_SERVICO_TRANSF_ITENS (OSTI_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_OSTF_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_OSTF_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_OSTF_ORDS_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_OSTF_ORDS_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_OSTF_ORDS_CLIE_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_OSTF_ORDS_CLIE_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_TPIT_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_TPIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_TPIT_TPRC_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_TPIT_TPRC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_TPIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_TPIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_VLR_UNITARIO D_NUMERIC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_QTDE D_NUMERIC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_ODIT_VLR_TOTAL D_NUMERIC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_COMISSAO_VENDA_INTERNA D_NUMERIC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_COMISSAO_VENDA_EXTERNA D_NUMERIC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_COMISSAO_VENDA_BALCAO D_NUMERIC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD OSTI_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Ordem de Serviço Transf. Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure PlanoContas;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Plano de Contas';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE PLANO_CONTAS (PLCT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_COD_SIMPLIFICADO D_CODIGO NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_DESCRICAO D_DESCRICAO_PP NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_TIPO CHAR(1) CHARACTER SET ISO8859_1 NOT NULL COLLATE ISO8859_1');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_PLCT_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_PLCT_EMPR_ID INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_SISTEMA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS ADD PLCT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Plano de Contas - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure PlanoContasPlanejamento;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Plano Contas Planejamento';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE PLANO_CONTAS_PLANEJAMENTO (PCPJ_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_PLCT_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_PLCT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_ANO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_01 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_02 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_03 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_04 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_05 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_06 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_07 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_08 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_09 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_10 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_11 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_MES_12 NUMERIC(15 2) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_CONCILIADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_OBS BLOB');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_TIPO_PLANO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PCPJ_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Plano Contas Planejamento - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Produtos;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Produtos';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE PRODUTOS (PROD_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_FORN_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_DESCRICAO D_DESCRICAO_PP NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_ABREVIACAO D_DESCRICAO_P NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_UNIDADE D_UNIDADE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_EMPR_ID_TP_PROD INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_TGEN_ID_TP_PROD INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_ID_TP_PROD INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_EMPR_ID_GRUPO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_TGEN_ID_GRUPO INTEGER DEFAULT 503 NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_ID_GRUPO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_EMPR_ID_MARCA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_TGEN_ID_MARCA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_ID_MARCA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_EMPR_ID_MODELO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_TGEN_ID_MODELO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_ID_MODELO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_EMPR_ID_ALQ_ECF INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_TGEN_ID_ALQ_ECF INTEGER DEFAULT 5');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GENE_ID_ALQ_ECF INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_DTA_ULT_COMPRA DATE');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_VLR_CUSTO NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_ESTQ_INICIAL NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_ESTQ_MINIMO NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GARANTIA INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_FLG_FRACIONADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_IMAGEM D_BLOB');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_GRADE INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_FLG_ESTOQUE INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_TIPO_COMISSAO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_COMISSAO_VEND_INTERNA NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_COMISSAO_VEND_EXTERNO NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_COMISSAO_VEND_BALCAO NUMERIC(15 4)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_COD_NCM D_NCM');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS ADD PROD_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Produtos - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ProdutosBar;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Produtos Barra';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE PRODUTOS_BAR (PRCB_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_BAR ADD PRCB_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_BAR ADD PRCB_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_BAR ADD PRCB_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_BAR ADD PRCB_COD_BARRA D_COD_BARRAS NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_BAR ADD PRCB_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_BAR ADD PRCB_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Produtos Barra - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ProdutosComp;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Produtos Composição';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE PRODUTOS_COMP (PRCP_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_PROD_ID_COMP INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_PROD_EMPR_ID_COMP INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_QTDE NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE PRODUTOS_COMP ADD PRCP_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Produtos Composição - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure SaidaAvaria;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avaria';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE SAIDA_AVARIA (SIAV_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA ADD SIAV_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA ADD SIAV_NR_DOCUMENTO D_NR_DOC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA ADD SIAV_CONCILIADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA ADD SIAV_VLR_TOTAL NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA ADD SIAV_OBS D_BLOB');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA ADD SIAV_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA ADD SIAV_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avaria - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure SaidaAvariaItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avaria Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE SAIDA_AVARIA_ITENS (SIIT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_SIAV_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_SIAV_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_QTDE NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_VLR_CUSTO NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_VLR_TOTAL NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVARIA_ITENS ADD SIIT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avaria Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure SaidaAvulsa;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avulsa';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE SAIDA_AVULSA (SAAV_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA ADD SAAV_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA ADD SAAV_NR_DOCUMENTO D_NR_DOC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA ADD SAAV_CONCILIADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA ADD SAAV_OBS D_BLOB');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA ADD SAAV_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA ADD SAAV_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avulsa - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure SaidaAvulsaItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avulsa Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE SAIDA_AVULSA_ITENS (SAIT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_SAAV_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_SAAV_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_QTDE NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE SAIDA_AVULSA_ITENS ADD SAIT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Saída Avulsa Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure TabelaPreco;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Tabela de Preço';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE TABELA_PRECO (TPRC_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO ADD TPRC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO ADD TPRC_DESCRICAO D_DESCRICAO_PP NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO ADD TPRC_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO ADD TPRC_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO ADD TPRC_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Tabela de Preço - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure TabelaPrecoItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Tabela Preço Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE TABELA_PRECO_ITENS (TPIT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_TPRC_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_TPRC_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_DTA_VIGENCIA DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_DTA_VALIDADE DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_VLR_GONDOLA NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_VLR_MINIMO NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_VLR_ESPECIAL NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_VLR_ATACADO NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TABELA_PRECO_ITENS ADD TPIT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Tabela Preço Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure TGener;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Tgener';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE TGENER (TGEN_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_COMENTARIO D_DESCRICAO_MM');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_TIPO INTEGER');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_DESCR D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_ID D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_DESCR D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_NUMBER1 D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_NUMBER2 D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_NUMBER3 D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_PAR1 D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_PAR2 D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_ROTULO_PAR3 D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TGENER ADD TGEN_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Tgener - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure TransfEstoque;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Transf. Estoque';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE TRANSF_ESTOQUE (TRAN_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE ADD TRAN_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE ADD TRAN_EMPR_TRANSF INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE ADD TRAN_NR_DOCUMENTO D_NR_DOC NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE ADD TRAN_CONCILIADO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE ADD TRAN_OBS D_BLOB NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE ADD TRAN_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE ADD TRAN_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Transf. Estoque - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure TransfEstoqueItem;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Transf. Estoque Itens';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE TRANSF_ESTOQUE_ITENS (TRIT_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_TRAN_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_TRAN_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_PROD_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_PROD_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_QTDE NUMERIC(15 4) NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD TRIT_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Transf. Estoque Itens - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Usuarios;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Usuários';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE USUARIO (USER_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_NOME_COMPLETO D_NOME');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_LOGIN D_LOGIN NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_SENHA D_SENHA NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_ATIVO INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_CEP D_CEP');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_ENDERECO D_DESCRICAO_PP');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_BAIRRO D_DESCRICAO_P');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_GENE_EMPR_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_GENE_TGEN_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_GENE_ID_PRACA INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_EMAIL D_EMAIL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_TELEFONE1 D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_TELEFONE2 D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_TELEFONE3 D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_TELEFONE4 D_FONE');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_DTA_CADASTRO DATE NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO ADD USER_USER_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Usuários - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure UsuarioEmpr;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Usuários Empr.';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE USUARIO_EMPR (USEP_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO_EMPR ADD USEP_USER_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO_EMPR ADD USEP_EMPR_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Usuários Empr. - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure UsuarioM;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Usuários Menus';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE TABLE USUARIO_M (USRM_ID INTEGER NOT NULL)');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO_M ADD USRM_USER_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO_M ADD USRM_EMPR_ID INTEGER NOT NULL');
  funcLocal.InstructionSQL('ALTER TABLE USUARIO_M ADD USRM_MENU_ID INTEGER NOT NULL');
  fSplash.LabelProgress.Caption := 'Atualizando Usuários Menus - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure ForeignKey;
var
  sltTMP : TStringList;
begin
  try
    fSplash.LabelProgress.Caption := 'Atualizando ForeignKeys';
    fSplash.Repaint;
    Sleep(200);
    sltTMP := TStringList.Create;
    with sltTMP do begin
      Add('ALTER TABLE CLIENTES ADD CONSTRAINT PK_CLIENTES PRIMARY KEY (CLIE_IDCLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONF_ORDEM_SERVICO ADD PRIMARY KEY (CFOS_IDCFOS_EMPR_IDCFOS_CSIS_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONF_SISTEMA ADD CONSTRAINT PK_CONF_SISTEMA PRIMARY KEY (CSIS_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS ADD PRIMARY KEY (CBCO_IDCBCO_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS_MOV ADD PRIMARY KEY (CBMV_IDCBMV_EMPR_IDCBMV_CBCO_IDCBMV_CBCO_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD PRIMARY KEY (CPAG_IDCPAG_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD CONSTRAINT PK_CONTAS_PAGAR_ACERTOS PRIMARY KEY (ACPG_IDACPG_EMPR_IDACPG_CPAG_IDACPG_CPAG_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD PRIMARY KEY (CREC_IDCREC_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD PRIMARY KEY (ACRE_IDACRE_EMPR_IDACRE_CREC_IDACRE_CREC_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE EMPRESAS ADD CONSTRAINT PK_EMPRESAS PRIMARY KEY (EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ENTRADA_AVULSA ADD PRIMARY KEY (ENAV_IDENAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ENTRADA_AVULSA_ITENS ADD PRIMARY KEY (ENIT_IDENIT_EMPR_IDENIT_ENAV_IDENIT_ENAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ESTOQUE ADD PRIMARY KEY (ESTQ_IDESTQ_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ESTOQUE_MOV ADD PRIMARY KEY (ESTM_IDESTM_EMPR_IDESTM_ESTQ_IDESTM_ESTQ_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE FORNECEDORES ADD CONSTRAINT PK_FORNECEDORES PRIMARY KEY (FORN_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE GENERICA ADD CONSTRAINT PK_GENERICA PRIMARY KEY (GENE_EMPR_IDGENE_TGEN_IDGENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE LIVRO_CAIXA ADD CONSTRAINT PK_LIVRO_CAIXA PRIMARY KEY (LCAX_IDLCAX_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE LOGIN ADD CONSTRAINT PK_LOGIN PRIMARY KEY (LOGI_IDLOGI_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE MENU ADD CONSTRAINT PK_MENU PRIMARY KEY (MENU_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE NOTA_FISCAL ADD PRIMARY KEY (NFEN_IDNFEN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE NOTA_FISCAL_ACERTOS ADD CONSTRAINT PK_NOTA_FISCAL_ACERTOS PRIMARY KEY (NFAC_IDNFAC_EMPR_IDNFAC_NFEN_IDNFAC_NFEN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE NOTA_FISCAL_ITENS ADD PRIMARY KEY (NFIT_IDNFIT_EMPR_IDNFIT_NFEN_IDNFIT_NFEN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD PRIMARY KEY (ORDS_IDORDS_EMPR_IDORDS_CLIE_IDORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD PRIMARY KEY (ODAC_IDODAC_EMPR_IDODAC_ORDS_IDODAC_ORDS_EMPR_IDODAC_ORDS_CLIE_IDODAC_ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ITENS ADD PRIMARY KEY (ODIT_IDODIT_EMPR_IDODIT_ORDS_IDODIT_ORDS_EMPR_IDODIT_ORDS_CLIE_IDODIT_ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF ADD PRIMARY KEY (OSTF_IDOSTF_EMPR_IDOSTF_ORDS_IDOSTF_ORDS_EMPR_IDOSTF_ORDS_CLIE_IDOSTF_ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD PRIMARY KEY (OSTI_IDOSTI_EMPR_IDOSTI_OSTF_IDOSTI_OSTF_EMPR_IDOSTI_OSTF_ORDS_IDOSTI_OSTF_ORDS_EMPR_IDOSTI_OSTF_ORDS_CLIE_IDOSTI_OSTF_ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE PLANO_CONTAS ADD CONSTRAINT PK_PLANO_CONTAS PRIMARY KEY (PLCT_IDPLCT_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD PRIMARY KEY (PCPJ_IDPCPJ_EMPR_IDPCPJ_PLCT_IDPCPJ_PLCT_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE PRODUTOS ADD PRIMARY KEY (PROD_IDPROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE PRODUTOS_BAR ADD PRIMARY KEY (PRCB_IDPRCB_EMPR_IDPRCB_PROD_IDPRCB_PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE PRODUTOS_COMP ADD PRIMARY KEY (PRCP_IDPRCP_EMPR_IDPRCP_PROD_IDPRCP_PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE SAIDA_AVARIA ADD PRIMARY KEY (SIAV_IDSIAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE SAIDA_AVARIA_ITENS ADD PRIMARY KEY (SIIT_IDSIIT_EMPR_IDSIIT_SIAV_IDSIIT_SIAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE SAIDA_AVULSA ADD PRIMARY KEY (SAAV_IDSAAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE SAIDA_AVULSA_ITENS ADD PRIMARY KEY (SAIT_IDSAIT_EMPR_IDSAIT_SAAV_IDSAIT_SAAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE TABELA_PRECO ADD PRIMARY KEY (TPRC_IDTPRC_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE TABELA_PRECO_ITENS ADD PRIMARY KEY (TPIT_IDTPIT_EMPR_IDTPIT_TPRC_IDTPIT_TPRC_EMPR_IDTPIT_PROD_IDTPIT_PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE TGENER ADD CONSTRAINT PK_TGENER PRIMARY KEY (TGEN_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE ADD PRIMARY KEY (TRAN_IDTRAN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD PRIMARY KEY (TRIT_IDTRIT_EMPR_IDTRIT_TRAN_IDTRIT_TRAN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE USUARIO ADD CONSTRAINT PK_USUARIO PRIMARY KEY (USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE USUARIO_EMPR ADD CONSTRAINT PK_USUARIO_EMPR PRIMARY KEY (USEP_IDUSEP_USER_IDUSEP_EMPR_ID)');
      Clear;
      Add('ALTER TABLE USUARIO_M ADD');
      Add('CONSTRAINT PK_USUARIO_M PRIMARY KEY');
      Add('(USRM_ID,USRM_USER_ID,USRM_EMPR_ID,USRM_MENU_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
  	  Clear;
      Add('ALTER TABLE CLIENTES ADD');
      Add('CONSTRAINT FK_CLIENTES FOREIGN KEY');
      Add('(CLIE_EMPR_ID) REFERENCES EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CLIENTES ADD');
      Add('CONSTRAINT FK_CLIENTES1 FOREIGN KEY');
      Add('(CLIE_GENE_EMPR_ID_PRACA,CLIE_GENE_TGEN_ID_PRACA,CLIE_GENE_ID_PRACA) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CLIENTES ADD');
      Add('CONSTRAINT FK_CLIENTES2 FOREIGN KEY');
      Add('(CLIE_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONF_ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_CONF_ORDEM_SERVICO FOREIGN KEY');
      Add('(CFOS_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONF_ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_CONF_ORDEM_SERVICO1 FOREIGN KEY');
      Add('(CFOS_CSIS_EMPR_ID) REFERENCES');
      Add('CONF_SISTEMA(CSIS_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONF_ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_CONF_ORDEM_SERVICO2 FOREIGN KEY');
      Add('(CFOS_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONF_SISTEMA ADD');
      Add('CONSTRAINT FK_CONF_SISTEMA FOREIGN KEY');
      Add('(CSIS_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONF_SISTEMA ADD');
      Add('CONSTRAINT FK_CONF_SISTEMA1 FOREIGN KEY');
      Add('(CSIS_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONF_SISTEMA ADD');
      Add('CONSTRAINT FK_CONF_SISTEMA2 FOREIGN KEY');
      Add('(CSIS_TPRC_ID,CSIS_TPRC_EMPR_ID) REFERENCES');
      Add('TABELA_PRECO(TPRC_ID,TPRC_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONF_SISTEMA ADD');
      Add('CONSTRAINT FK_CONF_SISTEMA3 FOREIGN KEY');
      Add('(CSIS_CLIE_ID,CSIS_CLIE_EMPR_ID) REFERENCES');
      Add('CLIENTES(CLIE_ID,CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS ADD');
      Add('CONSTRAINT FK_CONTAS_BANCARIAS FOREIGN KEY');
      Add('(CBCO_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS ADD');
      Add('CONSTRAINT FK_CONTAS_BANCARIAS1 FOREIGN KEY');
      Add('(CBCO_GENE_EMPR_ID_BCO,CBCO_GENE_TGEN_ID_BCO,CBCO_GENE_ID_BCO) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS ADD');
      Add('CONSTRAINT FK_CONTAS_BANCARIAS2 FOREIGN KEY');
      Add('(CBCO_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS_MOV ADD');
      Add('CONSTRAINT FK_CONTAS_BANCARIAS_MOV FOREIGN KEY');
      Add('(CBMV_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS_MOV ADD');
      Add('CONSTRAINT FK_CONTAS_BANCARIAS_MOV1 FOREIGN KEY');
      Add('(CBMV_CBCO_ID,CBMV_CBCO_EMPR_ID) REFERENCES');
      Add('CONTAS_BANCARIAS(CBCO_ID,CBCO_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS_MOV ADD');
      Add('CONSTRAINT FK_CONTAS_BANCARIAS_MOV2 FOREIGN KEY');
      Add('(CBMV_GENE_EMPR_ID_TIPO_MOV,CBMV_GENE_TGEN_ID_TIPO_MOV,CBMV_GENE_ID_TIPO_MOV) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_BANCARIAS_MOV ADD');
      Add('CONSTRAINT FK_CONTAS_BANCARIAS_MOV3 FOREIGN KEY');
      Add('(CBMV_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR FOREIGN KEY');
      Add('(CPAG_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR1 FOREIGN KEY');
      Add('(CPAG_FORN_ID) REFERENCES');
      Add('FORNECEDORES(FORN_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR2 FOREIGN KEY');
      Add('(CPAG_PLCT_ID,CPAG_PLCT_EMPR_ID) REFERENCES');
      Add('PLANO_CONTAS(PLCT_ID,PLCT_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR3 FOREIGN KEY');
      Add('(CPAG_GENE_EMPR_ID_TIPO_DOC,CPAG_GENE_TGEN_ID_TIPO_DOC,CPAG_GENE_ID_TIPO_DOC) REFERENCES');
      Add('ENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR4 FOREIGN KEY');
      Add('(CPAG_USER_ID_CANC) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR5 FOREIGN KEY');
      Add('(CPAG_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR6 FOREIGN KEY');
      Add('(CPAG_CBCO_ID,CPAG_CBCO_EMPR_ID) REFERENCES');
      Add('CONTAS_BANCARIAS(CBCO_ID,CBCO_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR7 FOREIGN KEY');
      Add('(CPAG_NFAC_ID,CPAG_NFAC_EMPR_ID,CPAG_NFAC_NFEN_ID,CPAG_NFAC_NFEN_EMPR_ID) REFERENCES');
      Add('NOTA_FISCAL_ACERTOS(NFAC_ID,NFAC_EMPR_ID,NFAC_NFEN_ID,NFAC_NFEN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR_ACERTOS FOREIGN KEY');
      Add('(ACPG_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR_ACERTOS1 FOREIGN KEY');
      Add('(ACPG_CPAG_ID,ACPG_CPAG_EMPR_ID) REFERENCES');
      Add('CONTAS_PAGAR(CPAG_ID,CPAG_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR_ACERTOS2 FOREIGN KEY');
      Add('(ACPG_GENE_EMPR_ID_TIPO_PGTO,ACPG_GENE_TGEN_ID_TIPO_PGTO,ACPG_GENE_ID_TIPO_PGTO) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_PAGAR_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_PAGAR_ACERTOS3 FOREIGN KEY');
      Add('(ACPG_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER FOREIGN KEY');
      Add('(CREC_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER1 FOREIGN KEY');
      Add('(CREC_CLIE_ID,CREC_CLIE_EMPR_ID) REFERENCES');
      Add('CLIENTES(CLIE_ID,CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER2 FOREIGN KEY');
      Add('(CREC_PLCT_ID,CREC_PLCT_EMPR_ID) REFERENCES');
      Add('PLANO_CONTAS(PLCT_ID,PLCT_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER3 FOREIGN KEY');
      Add('(CREC_GENE_EMPR_ID_TIPO_DOC,CREC_GENE_TGEN_ID_TIPO_DOC,CREC_GENE_ID_TIPO_DOC) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER4 FOREIGN KEY');
      Add('(CREC_USER_ID_CANC) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER5 FOREIGN KEY');
      Add('(CREC_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER6 FOREIGN KEY');
      Add('(CREC_CBCO_ID,CREC_CBCO_EMPR_ID) REFERENCES');
      Add('CONTAS_BANCARIAS(CBCO_ID,CBCO_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER7 FOREIGN KEY');
      Add('(CREC_ODAC_ID,CREC_ODAC_EMPR_ID,CREC_ODAC_ORDS_ID,CREC_ODAC_ORDS_EMPR_ID,CREC_ODAC_ORDS_CLIE_ID,CREC_ODAC_ORDS_CLIE_EMPR_ID) REFERENCES');
      Add('ORDEM_SERVICO_ACERTOS(ODAC_ID,ODAC_EMPR_ID,ODAC_ORDS_ID,ODAC_ORDS_EMPR_ID,ODAC_ORDS_CLIE_ID,ODAC_ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER_ACERTOS FOREIGN KEY');
      Add('(ACRE_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER_ACERTOS1 FOREIGN KEY');
      Add('(ACRE_CREC_ID,ACRE_CREC_EMPR_ID) REFERENCES');
      Add('CONTAS_RECEBER(CREC_ID,CREC_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER_ACERTOS2 FOREIGN KEY');
      Add('(ACRE_GENE_EMPR_ID_TIPO_PGTO,ACRE_GENE_TGEN_ID_TIPO_PGTO,ACRE_GENE_ID_TIPO_PGTO) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE CONTAS_RECEBER_ACERTOS ADD');
      Add('CONSTRAINT FK_CONTAS_RECEBER_ACERTOS3 FOREIGN KEY');
      Add('(ACRE_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE EMPRESAS ADD');
      Add('CONSTRAINT FK_EMPRESAS FOREIGN KEY');
      Add('(EMPR_GENE_EMPR_ID_PRACA,EMPR_GENE_TGEN_ID_PRACA,EMPR_GENE_ID_PRACA) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE EMPRESAS ADD');
      Add('CONSTRAINT FK_EMPRESAS1 FOREIGN KEY');
      Add('(EMPR_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ENTRADA_AVULSA ADD');
      Add('CONSTRAINT FK_ENTRADA_AVULSA FOREIGN KEY');
      Add('(ENAV_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ENTRADA_AVULSA ADD');
      Add('CONSTRAINT FK_ENTRADA_AVULSA1 FOREIGN KEY');
      Add('(ENAV_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ENTRADA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_ENTRADA_AVULSA_ITENS FOREIGN KEY');
      Add('(ENIT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ENTRADA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_ENTRADA_AVULSA_ITENS1 FOREIGN KEY');
      Add('(ENIT_ENAV_ID,ENIT_ENAV_EMPR_ID) REFERENCES');
      Add('ENTRADA_AVULSA(ENAV_ID,ENAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ENTRADA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_ENTRADA_AVULSA_ITENS2 FOREIGN KEY');
      Add('(ENIT_PROD_ID,ENIT_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ENTRADA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_ENTRADA_AVULSA_ITENS3 FOREIGN KEY');
      Add('(ENIT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ESTOQUE ADD');
      Add('CONSTRAINT FK_ESTOQUE FOREIGN KEY');
      Add('(ESTQ_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ESTOQUE ADD');
      Add('CONSTRAINT FK_ESTOQUE1 FOREIGN KEY');
      Add('(ESTQ_PROD_ID,ESTQ_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ESTOQUE ADD');
      Add('CONSTRAINT FK_ESTOQUE2 FOREIGN KEY');
      Add('(ESTQ_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ESTOQUE_MOV ADD');
      Add('CONSTRAINT FK_ESTOQUE_MOV FOREIGN KEY');
      Add('(ESTM_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ESTOQUE_MOV ADD');
      Add('CONSTRAINT FK_ESTOQUE_MOV1 FOREIGN KEY');
      Add('(ESTM_ESTQ_ID,ESTM_ESTQ_EMPR_ID) REFERENCES');
      Add('ESTOQUE(ESTQ_ID,ESTQ_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ESTOQUE_MOV ADD');
      Add('CONSTRAINT FK_ESTOQUE_MOV2 FOREIGN KEY');
      Add('(ESTM_GENE_EMPR_ID_ORIGEM,ESTM_GENE_TGEN_ID_ORIGEM,ESTM_GENE_ID_ORIGEM) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ESTOQUE_MOV ADD');
      Add('CONSTRAINT FK_ESTOQUE_MOV3 FOREIGN KEY');
      Add('(ESTM_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE FORNECEDORES ADD');
      Add('CONSTRAINT FK_FORNECEDORES FOREIGN KEY');
      Add('(FORN_GENE_EMPR_ID_PRACA,FORN_GENE_TGEN_ID_PRACA,FORN_GENE_ID_PRACA) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE FORNECEDORES ADD');
      Add('CONSTRAINT FK_FORNECEDORES1 FOREIGN KEY');
      Add('(FORN_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE GENERICA ADD');
      Add('CONSTRAINT FK_GENERICA FOREIGN KEY');
      Add('(GENE_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE GENERICA ADD');
      Add('CONSTRAINT FK_GENERICA1 FOREIGN KEY');
      Add('(GENE_TGEN_ID) REFERENCES');
      Add('TGENER(TGEN_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE GENERICA ADD');
      Add('CONSTRAINT FK_GENERICA2 FOREIGN KEY');
      Add('(GENE_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE GENERICA ADD');
      Add('CONSTRAINT FK_GENERICA3 FOREIGN KEY');
      Add('(GENE_GENE_EMPR_ID_PROP,GENE_GENE_TGEN_ID_PROP,GENE_GENE_ID_PROD) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE LIVRO_CAIXA ADD');
      Add('CONSTRAINT FK_LIVRO_CAIXA FOREIGN KEY');
      Add('(LCAX_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE LIVRO_CAIXA ADD');
      Add('CONSTRAINT FK_LIVRO_CAIXA1 FOREIGN KEY');
      Add('(LCAX_PLCT_ID,LCAX_PLCT_EMPR_ID) REFERENCES');
      Add('PLANO_CONTAS(PLCT_ID,PLCT_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE LIVRO_CAIXA ADD');
      Add('CONSTRAINT FK_LIVRO_CAIXA2 FOREIGN KEY');
      Add('(LCAX_GENE_EMPR_ID_TP_MOV,LCAX_GENE_TGEN_ID_TP_MOV,LCAX_GENE_ID_TP_MOV) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE LIVRO_CAIXA ADD');
      Add('CONSTRAINT FK_LIVRO_CAIXA3 FOREIGN KEY');
      Add('(LCAX_GENE_EMPR_ID_TP_ORIG,LCAX_GENE_TGEN_ID_TP_ORIG,LCAX_GENE_ID_TP_ORIG) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE LIVRO_CAIXA ADD');
      Add('CONSTRAINT FK_LIVRO_CAIXA4 FOREIGN KEY');
      Add('(LCAX_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE LOGIN ADD');
      Add('CONSTRAINT FK_LOGIN FOREIGN KEY');
      Add('(LOGI_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE LOGIN ADD');
      Add('CONSTRAINT FK_LOGIN1 FOREIGN KEY');
      Add('(LOGI_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE MENU ADD');
      Add('CONSTRAINT FK_MENU FOREIGN KEY');
      Add('(MENU_GENE_EMPR_ID_TP,MENU_GENE_TGEN_ID_TP,MENU_GENE_ID_TP) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE MENU ADD');
      Add('CONSTRAINT FK_MENU1 FOREIGN KEY');
      Add('(MENU_MENU_ID) REFERENCES');
      Add('MENU(MENU_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL FOREIGN KEY');
      Add('(NFEN_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL1 FOREIGN KEY');
      Add('(NFEN_FORN_ID) REFERENCES');
      Add('FORNECEDORES(FORN_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL2 FOREIGN KEY');
      Add('(NFEN_USER_ID_CANC) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL3 FOREIGN KEY');
      Add('(NFEN_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ACERTOS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ACERTOS FOREIGN KEY');
      Add('(NFAC_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ACERTOS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ACERTOS1 FOREIGN KEY');
      Add('(NFAC_NFEN_ID,NFAC_NFEN_EMPR_ID) REFERENCES');
      Add('NOTA_FISCAL(NFEN_ID,NFEN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ACERTOS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ACERTOS2 FOREIGN KEY');
      Add('(NFAC_GENE_EMPR_ID_TP_DOC,NFAC_GENE_TGEN_ID_TP_DOC,NFAC_GENE_ID_TP_DOC) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ACERTOS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ACERTOS3 FOREIGN KEY');
      Add('(NFAC_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ITENS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ITENS FOREIGN KEY');
      Add('(NFIT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ITENS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ITENS1 FOREIGN KEY');
      Add('(NFIT_NFEN_ID,NFIT_NFEN_EMPR_ID) REFERENCES');
      Add('NOTA_FISCAL(NFEN_ID,NFEN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ITENS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ITENS2 FOREIGN KEY');
      Add('(NFIT_PROD_ID,NFIT_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE NOTA_FISCAL_ITENS ADD');
      Add('CONSTRAINT FK_NOTA_FISCAL_ITENS3 FOREIGN KEY');
      Add('(NFIT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO FOREIGN KEY');
      Add('(ORDS_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO1 FOREIGN KEY');
      Add('(ORDS_CLIE_ID,ORDS_CLIE_EMPR_ID) REFERENCES');
      Add('CLIENTES(CLIE_ID,CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO2 FOREIGN KEY');
      Add('(ORDS_TPRC_ID,ORDS_TPRC_EMPR_ID) REFERENCES');
      Add('TABELA_PRECO(TPRC_ID,TPRC_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO3 FOREIGN KEY');
      Add('(ORDS_GENE_EMPR_ID_TIPO_OS,ORDS_GENE_TGEN_ID_TIPO_OS,ORDS_GENE_ID_TIPO_OS) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO4 FOREIGN KEY');
      Add('(ORDS_USER_ID_TEC) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO5 FOREIGN KEY');
      Add('(ORDS_PROD_ID_EQUIP,ORDS_PROD_EMPR_ID_EQUIP) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO6 FOREIGN KEY');
      Add('(ORDS_USER_ID_CANC) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO7 FOREIGN KEY');
      Add('(ORDS_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO8 FOREIGN KEY');
      Add('(ORDS_USER_ID_ENTREG) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ACERTOS FOREIGN KEY');
      Add('(ODAC_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ACERTOS1 FOREIGN KEY');
      Add('(ODAC_ORDS_ID,ODAC_ORDS_EMPR_ID,ODAC_ORDS_CLIE_ID,ODAC_ORDS_CLIE_EMPR_ID) REFERENCES');
      Add('ORDEM_SERVICO(ORDS_ID,ORDS_EMPR_ID,ORDS_CLIE_ID,ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ACERTOS2 FOREIGN KEY');
      Add('(ODAC_GENE_EMPR_ID_TIPO_DOC,ODAC_GENE_TGEN_ID_TIPO_DOC,ODAC_GENE_ID_TIPO_DOC) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ACERTOS3 FOREIGN KEY');
      Add('(ODAC_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ACERTOS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ACERTOS4 FOREIGN KEY');
      Add('(ODAC_GENE_EMPR_ID_BCO,ODAC_GENE_TGEN_ID_BCO,ODAC_GENE_ID_BCO) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ITENS FOREIGN KEY');
      Add('(ODIT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ITENS1 FOREIGN KEY');
      Add('(ODIT_ORDS_ID,ODIT_ORDS_EMPR_ID,ODIT_ORDS_CLIE_ID,ODIT_ORDS_CLIE_EMPR_ID) REFERENCES');
      Add('ORDEM_SERVICO(ORDS_ID,ORDS_EMPR_ID,ORDS_CLIE_ID,ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ITENS2 FOREIGN KEY');
      Add('(ODIT_TPIT_ID,ODIT_TPIT_EMPR_ID,ODIT_TPIT_TPRC_ID,ODIT_TPIT_TPRC_EMPR_ID,ODIT_TPIT_PROD_ID,ODIT_TPIT_PROD_EMPR_ID) REFERENCES');
      Add('TABELA_PRECO_ITENS(TPIT_ID,TPIT_EMPR_ID,TPIT_TPRC_ID,TPIT_TPRC_EMPR_ID,TPIT_PROD_ID,TPIT_PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_ITENS3 FOREIGN KEY');
      Add('(ODIT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF1 FOREIGN KEY');
      Add('(OSTF_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF2 FOREIGN KEY');
      Add('(OSTF_ORDS_ID,OSTF_ORDS_EMPR_ID,OSTF_ORDS_CLIE_ID,OSTF_ORDS_CLIE_EMPR_ID) REFERENCES');
      Add('ORDEM_SERVICO(ORDS_ID,ORDS_EMPR_ID,ORDS_CLIE_ID,ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF3 FOREIGN KEY');
      Add('(OSTF_USER_ID_TEC_ORIG) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF4 FOREIGN KEY');
      Add('(OSTF_USER_ID_TEC_DEST) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF5 FOREIGN KEY');
      Add('(OSTF_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF_ITENS1 FOREIGN KEY');
      Add('(OSTI_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF_ITENS2 FOREIGN KEY');
      Add('(OSTI_OSTF_ID,OSTI_OSTF_EMPR_ID,OSTI_OSTF_ORDS_ID,OSTI_OSTF_ORDS_EMPR_ID,OSTI_OSTF_ORDS_CLIE_ID,OSTI_OSTF_ORDS_CLIE_EMPR_ID) REFERENCES');
      Add('ORDEM_SERVICO_TRANSF(OSTF_ID,OSTF_EMPR_ID,OSTF_ORDS_ID,OSTF_ORDS_EMPR_ID,OSTF_ORDS_CLIE_ID,OSTF_ORDS_CLIE_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF_ITENS3 FOREIGN KEY');
      Add('(OSTI_ODIT_TPIT_ID,OSTI_ODIT_TPIT_EMPR_ID,OSTI_ODIT_TPIT_TPRC_ID,OSTI_ODIT_TPIT_TPRC_EMPR_ID,OSTI_ODIT_TPIT_PROD_ID,OSTI_ODIT_TPIT_PROD_EMPR_ID) REFERENCES');
      Add('TABELA_PRECO_ITENS(TPIT_ID,TPIT_EMPR_ID,TPIT_TPRC_ID,TPIT_TPRC_EMPR_ID,TPIT_PROD_ID,TPIT_PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE ORDEM_SERVICO_TRANSF_ITENS ADD');
      Add('CONSTRAINT FK_ORDEM_SERVICO_TRANSF_ITENS6 FOREIGN KEY');
      Add('(OSTI_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PLANO_CONTAS ADD');
      Add('CONSTRAINT FK_PLANO_CONTAS FOREIGN KEY');
      Add('(PLCT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PLANO_CONTAS ADD');
      Add('CONSTRAINT FK_PLANO_CONTAS1 FOREIGN KEY');
      Add('(PLCT_PLCT_ID,PLCT_PLCT_EMPR_ID) REFERENCES');
      Add('PLANO_CONTAS(PLCT_ID,PLCT_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PLANO_CONTAS ADD');
      Add('CONSTRAINT FK_PLANO_CONTAS2 FOREIGN KEY');
      Add('(PLCT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD');
      Add('CONSTRAINT FK_PLANO_CONTAS_PLANEJAMENTO FOREIGN KEY');
      Add('(PCPJ_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD');
      Add('CONSTRAINT FK_PLANO_CONTAS_PLANEJAMENTO1 FOREIGN KEY');
      Add('(PCPJ_PLCT_ID,PCPJ_PLCT_EMPR_ID) REFERENCES');
      Add('PLANO_CONTAS(PLCT_ID,PLCT_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PLANO_CONTAS_PLANEJAMENTO ADD');
      Add('CONSTRAINT FK_PLANO_CONTAS_PLANEJAMENTO2 FOREIGN KEY');
      Add('(PCPJ_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS FOREIGN KEY');
      Add('(PROD_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS1 FOREIGN KEY');
      Add('(PROD_FORN_ID) REFERENCES');
      Add('FORNECEDORES(FORN_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS2 FOREIGN KEY');
      Add('(PROD_GENE_EMPR_ID_TP_PROD,PROD_GENE_TGEN_ID_TP_PROD,PROD_GENE_ID_TP_PROD) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS3 FOREIGN KEY');
      Add('(PROD_GENE_EMPR_ID_GRUPO,PROD_GENE_TGEN_ID_GRUPO,PROD_GENE_ID_GRUPO) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS4 FOREIGN KEY');
      Add('(PROD_GENE_EMPR_ID_MARCA,PROD_GENE_TGEN_ID_MARCA,PROD_GENE_ID_MARCA) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS5 FOREIGN KEY');
      Add('(PROD_GENE_EMPR_ID_MODELO,PROD_GENE_TGEN_ID_MODELO,PROD_GENE_ID_MODELO) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS6 FOREIGN KEY');
      Add('(PROD_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS ADD');
      Add('CONSTRAINT FK_PRODUTOS7 FOREIGN KEY');
      Add('(PROD_GENE_EMPR_ID_ALQ_ECF,PROD_GENE_TGEN_ID_ALQ_ECF,PROD_GENE_ID_ALQ_ECF) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS_BAR ADD');
      Add('CONSTRAINT FK_PRODUTOS_BAR FOREIGN KEY');
      Add('(PRCB_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS_BAR ADD');
      Add('CONSTRAINT FK_PRODUTOS_BAR1 FOREIGN KEY');
      Add('(PRCB_PROD_ID,PRCB_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS_BAR ADD');
      Add('CONSTRAINT FK_PRODUTOS_BAR2 FOREIGN KEY');
      Add('(PRCB_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS_COMP ADD');
      Add('CONSTRAINT FK_PRODUTOS_COMP FOREIGN KEY');
      Add('(PRCP_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS_COMP ADD');
      Add('CONSTRAINT FK_PRODUTOS_COMP1 FOREIGN KEY');
      Add('(PRCP_PROD_ID,PRCP_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS_COMP ADD');
      Add('CONSTRAINT FK_PRODUTOS_COMP2 FOREIGN KEY');
      Add('(PRCP_PROD_ID_COMP,PRCP_PROD_EMPR_ID_COMP) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE PRODUTOS_COMP ADD');
      Add('CONSTRAINT FK_PRODUTOS_COMP3 FOREIGN KEY');
      Add('(PRCP_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVARIA ADD');
      Add('CONSTRAINT FK_SAIDA_AVARIA FOREIGN KEY');
      Add('(SIAV_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVARIA ADD');
      Add('CONSTRAINT FK_SAIDA_AVARIA1 FOREIGN KEY');
      Add('(SIAV_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVARIA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVARIA_ITENS FOREIGN KEY');
      Add('(SIIT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVARIA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVARIA_ITENS1 FOREIGN KEY');
      Add('(SIIT_SIAV_ID,SIIT_SIAV_EMPR_ID) REFERENCES');
      Add('SAIDA_AVARIA(SIAV_ID,SIAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVARIA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVARIA_ITENS2 FOREIGN KEY');
      Add('(SIIT_PROD_ID,SIIT_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVARIA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVARIA_ITENS3 FOREIGN KEY');
      Add('(SIIT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVULSA ADD');
      Add('CONSTRAINT FK_SAIDA_AVULSA FOREIGN KEY');
      Add('(SAAV_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVULSA ADD');
      Add('CONSTRAINT FK_SAIDA_AVULSA1 FOREIGN KEY');
      Add('(SAAV_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVULSA_ITENS FOREIGN KEY');
      Add('(SAIT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVULSA_ITENS1 FOREIGN KEY');
      Add('(SAIT_SAAV_ID,SAIT_SAAV_EMPR_ID) REFERENCES');
      Add('SAIDA_AVULSA(SAAV_ID,SAAV_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVULSA_ITENS2 FOREIGN KEY');
      Add('(SAIT_PROD_ID,SAIT_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE SAIDA_AVULSA_ITENS ADD');
      Add('CONSTRAINT FK_SAIDA_AVULSA_ITENS3 FOREIGN KEY');
      Add('(SAIT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TABELA_PRECO ADD');
      Add('CONSTRAINT FK_TABELA_PRECO FOREIGN KEY');
      Add('(TPRC_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TABELA_PRECO ADD');
      Add('CONSTRAINT FK_TABELA_PRECO1 FOREIGN KEY');
      Add('(TPRC_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TABELA_PRECO_ITENS ADD');
      Add('CONSTRAINT FK_TABELA_PRECO_ITENS FOREIGN KEY');
      Add('(TPIT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TABELA_PRECO_ITENS ADD');
      Add('CONSTRAINT FK_TABELA_PRECO_ITENS1 FOREIGN KEY');
      Add('(TPIT_TPRC_ID,TPIT_TPRC_EMPR_ID) REFERENCES');
      Add('TABELA_PRECO(TPRC_ID,TPRC_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TABELA_PRECO_ITENS ADD');
      Add('CONSTRAINT FK_TABELA_PRECO_ITENS2 FOREIGN KEY');
      Add('(TPIT_PROD_ID,TPIT_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TABELA_PRECO_ITENS ADD');
      Add('CONSTRAINT FK_TABELA_PRECO_ITENS3 FOREIGN KEY');
      Add('(TPIT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TGENER ADD');
      Add('CONSTRAINT FK_TGENER FOREIGN KEY');
      Add('(TGEN_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE ADD');
      Add('CONSTRAINT FK_TRANSF_ESTOQUE FOREIGN KEY');
      Add('(TRAN_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE ADD');
      Add('CONSTRAINT FK_TRANSF_ESTOQUE1 FOREIGN KEY');
      Add('(TRAN_EMPR_TRANSF) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE ADD');
      Add('CONSTRAINT FK_TRANSF_ESTOQUE2 FOREIGN KEY');
      Add('(TRAN_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD');
      Add('CONSTRAINT FK_TRANSF_ESTOQUE_ITENS FOREIGN KEY');
      Add('(TRIT_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD');
      Add('CONSTRAINT FK_TRANSF_ESTOQUE_ITENS1 FOREIGN KEY');
      Add('(TRIT_TRAN_ID,TRIT_TRAN_EMPR_ID) REFERENCES');
      Add('TRANSF_ESTOQUE(TRAN_ID,TRAN_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD');
      Add('CONSTRAINT FK_TRANSF_ESTOQUE_ITENS2 FOREIGN KEY');
      Add('(TRIT_PROD_ID,TRIT_PROD_EMPR_ID) REFERENCES');
      Add('PRODUTOS(PROD_ID,PROD_EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE TRANSF_ESTOQUE_ITENS ADD');
      Add('CONSTRAINT FK_TRANSF_ESTOQUE_ITENS3 FOREIGN KEY');
      Add('(TRIT_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE USUARIO ADD');
      Add('CONSTRAINT FK_USUARIO FOREIGN KEY');
      Add('(USER_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE USUARIO ADD');
      Add('CONSTRAINT FK_USUARIO1 FOREIGN KEY');
      Add('(USER_GENE_EMPR_ID_PRACA,USER_GENE_TGEN_ID_PRACA,USER_GENE_ID_PRACA) REFERENCES');
      Add('GENERICA(GENE_EMPR_ID,GENE_TGEN_ID,GENE_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE USUARIO_EMPR ADD');
      Add('CONSTRAINT FK_USUARIO_EMPR FOREIGN KEY');
      Add('(USEP_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE USUARIO_EMPR ADD');
      Add('CONSTRAINT FK_USUARIO_EMPR1 FOREIGN KEY');
      Add('(USEP_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE USUARIO_M ADD');
      Add('CONSTRAINT FK_USUARIO_M FOREIGN KEY');
      Add('(USRM_USER_ID) REFERENCES');
      Add('USUARIO(USER_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE USUARIO_M ADD');
      Add('CONSTRAINT FK_USUARIO_M1 FOREIGN KEY');
      Add('(USRM_EMPR_ID) REFERENCES');
      Add('EMPRESAS(EMPR_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
      Clear;
      Add('ALTER TABLE USUARIO_M ADD');
      Add('CONSTRAINT FK_USUARIO_M2 FOREIGN KEY');
      Add('(USRM_MENU_ID) REFERENCES');
      Add('MENU(MENU_ID)');
      funcLocal.InstructionSQL(sltTMP.Text);
    end;
  finally
    FreeAndNil(sltTMP);
    fSplash.LabelProgress.Caption := 'Atualizando ForeignKeys - [OK]';
    fSplash.Repaint;
    Sleep(200);
  end;
end;

procedure GrantSelect;
begin
  fSplash.LabelProgress.Caption := 'Atualizando GrantSelect';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CLIENTES TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONF_ORDEM_SERVICO TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONF_SISTEMA TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONTAS_BANCARIAS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONTAS_BANCARIAS_MOV TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONTAS_PAGAR TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONTAS_PAGAR_ACERTOS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONTAS_RECEBER TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON CONTAS_RECEBER_ACERTOS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON EMPRESAS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ENTRADA_AVULSA TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ENTRADA_AVULSA_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ESTOQUE TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ESTOQUE_MOV TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON FORNECEDORES TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON GENERICA TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON LIVRO_CAIXA TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON LOGIN TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON MENU TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON NOTA_FISCAL TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON NOTA_FISCAL_ACERTOS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON NOTA_FISCAL_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ORDEM_SERVICO TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ORDEM_SERVICO_ACERTOS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ORDEM_SERVICO_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ORDEM_SERVICO_TRANSF TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON ORDEM_SERVICO_TRANSF_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON PLANO_CONTAS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON PLANO_CONTAS_PLANEJAMENTO TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON PRODUTOS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON PRODUTOS_BAR TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON PRODUTOS_COMP TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON SAIDA_AVARIA TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON SAIDA_AVARIA_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON SAIDA_AVULSA TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON SAIDA_AVULSA_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON TABELA_PRECO TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON TABELA_PRECO_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON TGENER TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON TRANSF_ESTOQUE TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON TRANSF_ESTOQUE_ITENS TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON USUARIO TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON USUARIO_EMPR TO SYSDBA WITH GRANT OPTION');
  funcLocal.InstructionSQL('GRANT SELECT INSERT DELETE REFERENCES UPDATE ON USUARIO_M TO SYSDBA WITH GRANT OPTION');
  fSplash.LabelProgress.Caption := 'Atualizando GrantSelect - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

procedure Index;
begin
  fSplash.LabelProgress.Caption := 'Atualizando Index';
  fSplash.Repaint;
  Sleep(200);
  funcLocal.InstructionSQL('CREATE INDEX IDX_CLIENTES1 ON CLIENTES(CLIE_RAZAO_SOCIAL)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CLIENTES2 ON CLIENTES(CLIE_FANTASIA)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CLIENTES3 ON CLIENTES(CLIE_TELEFONE1)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CLIENTES4 ON CLIENTES(CLIE_TELEFONE2)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CLIENTES5 ON CLIENTES(CLIE_TELEFONE3)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CLIENTES6 ON CLIENTES(CLIE_TELEFONE4)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CONTAS_PAGAR ON CONTAS_PAGAR(CPAG_VALOR_DOC)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CONTAS_PAGAR1 ON CONTAS_PAGAR(CPAG_VALOR_PAGO)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CONTAS_PAGAR_ACERTOS ON CONTAS_PAGAR_ACERTOS(ACPG_VALOR_DOCACPG_DTA_CADASTRO)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CONTAS_RECEBER ON CONTAS_RECEBER(CREC_VALOR_DOC)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CONTAS_RECEBER1 ON CONTAS_RECEBER(CREC_VALOR_PAGO)');
  funcLocal.InstructionSQL('CREATE INDEX IDX_CONTAS_RECEBER_ACERTOS ON CONTAS_RECEBER_ACERTOS(ACRE_VALOR_DOCACRE_DTA_CADASTRO)');
  fSplash.LabelProgress.Caption := 'Atualizando Index - [OK]';
  fSplash.Repaint;
  Sleep(200);
end;

end.
